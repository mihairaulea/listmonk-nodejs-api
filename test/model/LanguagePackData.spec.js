/**
 * Listmonk
 * The API collection for listmonk
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Listmonk);
  }
}(this, function(expect, Listmonk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Listmonk.LanguagePackData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LanguagePackData', function() {
    it('should create an instance of LanguagePackData', function() {
      // uncomment below and update the code to test LanguagePackData
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be.a(Listmonk.LanguagePackData);
    });

    it('should have the property code (base name: "_.code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "_.name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property adminErrorMarshallingConfig (base name: "admin.errorMarshallingConfig")', function() {
      // uncomment below and update the code to test the property adminErrorMarshallingConfig
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property analyticsCount (base name: "analytics.count")', function() {
      // uncomment below and update the code to test the property analyticsCount
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property analyticsFromDate (base name: "analytics.fromDate")', function() {
      // uncomment below and update the code to test the property analyticsFromDate
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property analyticsInvalidDates (base name: "analytics.invalidDates")', function() {
      // uncomment below and update the code to test the property analyticsInvalidDates
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property analyticsIsUnique (base name: "analytics.isUnique")', function() {
      // uncomment below and update the code to test the property analyticsIsUnique
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property analyticsLinks (base name: "analytics.links")', function() {
      // uncomment below and update the code to test the property analyticsLinks
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property analyticsNonUnique (base name: "analytics.nonUnique")', function() {
      // uncomment below and update the code to test the property analyticsNonUnique
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property analyticsTitle (base name: "analytics.title")', function() {
      // uncomment below and update the code to test the property analyticsTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property analyticsToDate (base name: "analytics.toDate")', function() {
      // uncomment below and update the code to test the property analyticsToDate
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property bouncesSource (base name: "bounces.source")', function() {
      // uncomment below and update the code to test the property bouncesSource
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property bouncesUnknownService (base name: "bounces.unknownService")', function() {
      // uncomment below and update the code to test the property bouncesUnknownService
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property bouncesView (base name: "bounces.view")', function() {
      // uncomment below and update the code to test the property bouncesView
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsAddAltText (base name: "campaigns.addAltText")', function() {
      // uncomment below and update the code to test the property campaignsAddAltText
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsArchive (base name: "campaigns.archive")', function() {
      // uncomment below and update the code to test the property campaignsArchive
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsArchiveEnable (base name: "campaigns.archiveEnable")', function() {
      // uncomment below and update the code to test the property campaignsArchiveEnable
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsArchiveHelp (base name: "campaigns.archiveHelp")', function() {
      // uncomment below and update the code to test the property campaignsArchiveHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsArchiveMeta (base name: "campaigns.archiveMeta")', function() {
      // uncomment below and update the code to test the property campaignsArchiveMeta
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsArchiveMetaHelp (base name: "campaigns.archiveMetaHelp")', function() {
      // uncomment below and update the code to test the property campaignsArchiveMetaHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsCantUpdate (base name: "campaigns.cantUpdate")', function() {
      // uncomment below and update the code to test the property campaignsCantUpdate
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsClicks (base name: "campaigns.clicks")', function() {
      // uncomment below and update the code to test the property campaignsClicks
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsConfirmDelete (base name: "campaigns.confirmDelete")', function() {
      // uncomment below and update the code to test the property campaignsConfirmDelete
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsConfirmSchedule (base name: "campaigns.confirmSchedule")', function() {
      // uncomment below and update the code to test the property campaignsConfirmSchedule
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsConfirmSwitchFormat (base name: "campaigns.confirmSwitchFormat")', function() {
      // uncomment below and update the code to test the property campaignsConfirmSwitchFormat
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsContent (base name: "campaigns.content")', function() {
      // uncomment below and update the code to test the property campaignsContent
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsContentHelp (base name: "campaigns.contentHelp")', function() {
      // uncomment below and update the code to test the property campaignsContentHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsContinue (base name: "campaigns.continue")', function() {
      // uncomment below and update the code to test the property campaignsContinue
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsCopyOf (base name: "campaigns.copyOf")', function() {
      // uncomment below and update the code to test the property campaignsCopyOf
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsCustomHeadersHelp (base name: "campaigns.customHeadersHelp")', function() {
      // uncomment below and update the code to test the property campaignsCustomHeadersHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsDateAndTime (base name: "campaigns.dateAndTime")', function() {
      // uncomment below and update the code to test the property campaignsDateAndTime
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsEnded (base name: "campaigns.ended")', function() {
      // uncomment below and update the code to test the property campaignsEnded
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsErrorSendTest (base name: "campaigns.errorSendTest")', function() {
      // uncomment below and update the code to test the property campaignsErrorSendTest
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsFieldInvalidBody (base name: "campaigns.fieldInvalidBody")', function() {
      // uncomment below and update the code to test the property campaignsFieldInvalidBody
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsFieldInvalidFromEmail (base name: "campaigns.fieldInvalidFromEmail")', function() {
      // uncomment below and update the code to test the property campaignsFieldInvalidFromEmail
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsFieldInvalidListIDs (base name: "campaigns.fieldInvalidListIDs")', function() {
      // uncomment below and update the code to test the property campaignsFieldInvalidListIDs
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsFieldInvalidMessenger (base name: "campaigns.fieldInvalidMessenger")', function() {
      // uncomment below and update the code to test the property campaignsFieldInvalidMessenger
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsFieldInvalidName (base name: "campaigns.fieldInvalidName")', function() {
      // uncomment below and update the code to test the property campaignsFieldInvalidName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsFieldInvalidSendAt (base name: "campaigns.fieldInvalidSendAt")', function() {
      // uncomment below and update the code to test the property campaignsFieldInvalidSendAt
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsFieldInvalidSubject (base name: "campaigns.fieldInvalidSubject")', function() {
      // uncomment below and update the code to test the property campaignsFieldInvalidSubject
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsFormatHTML (base name: "campaigns.formatHTML")', function() {
      // uncomment below and update the code to test the property campaignsFormatHTML
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsFromAddress (base name: "campaigns.fromAddress")', function() {
      // uncomment below and update the code to test the property campaignsFromAddress
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsFromAddressPlaceholder (base name: "campaigns.fromAddressPlaceholder")', function() {
      // uncomment below and update the code to test the property campaignsFromAddressPlaceholder
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsInvalid (base name: "campaigns.invalid")', function() {
      // uncomment below and update the code to test the property campaignsInvalid
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsInvalidCustomHeaders (base name: "campaigns.invalidCustomHeaders")', function() {
      // uncomment below and update the code to test the property campaignsInvalidCustomHeaders
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsMarkdown (base name: "campaigns.markdown")', function() {
      // uncomment below and update the code to test the property campaignsMarkdown
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsNeedsSendAt (base name: "campaigns.needsSendAt")', function() {
      // uncomment below and update the code to test the property campaignsNeedsSendAt
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsNewCampaign (base name: "campaigns.newCampaign")', function() {
      // uncomment below and update the code to test the property campaignsNewCampaign
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsNoKnownSubsToTest (base name: "campaigns.noKnownSubsToTest")', function() {
      // uncomment below and update the code to test the property campaignsNoKnownSubsToTest
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsNoOptinLists (base name: "campaigns.noOptinLists")', function() {
      // uncomment below and update the code to test the property campaignsNoOptinLists
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsNoSubs (base name: "campaigns.noSubs")', function() {
      // uncomment below and update the code to test the property campaignsNoSubs
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsNoSubsToTest (base name: "campaigns.noSubsToTest")', function() {
      // uncomment below and update the code to test the property campaignsNoSubsToTest
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsNotFound (base name: "campaigns.notFound")', function() {
      // uncomment below and update the code to test the property campaignsNotFound
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsOnlyActiveCancel (base name: "campaigns.onlyActiveCancel")', function() {
      // uncomment below and update the code to test the property campaignsOnlyActiveCancel
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsOnlyActivePause (base name: "campaigns.onlyActivePause")', function() {
      // uncomment below and update the code to test the property campaignsOnlyActivePause
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsOnlyDraftAsScheduled (base name: "campaigns.onlyDraftAsScheduled")', function() {
      // uncomment below and update the code to test the property campaignsOnlyDraftAsScheduled
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsOnlyPausedDraft (base name: "campaigns.onlyPausedDraft")', function() {
      // uncomment below and update the code to test the property campaignsOnlyPausedDraft
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsOnlyScheduledAsDraft (base name: "campaigns.onlyScheduledAsDraft")', function() {
      // uncomment below and update the code to test the property campaignsOnlyScheduledAsDraft
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsPause (base name: "campaigns.pause")', function() {
      // uncomment below and update the code to test the property campaignsPause
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsPlainText (base name: "campaigns.plainText")', function() {
      // uncomment below and update the code to test the property campaignsPlainText
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsPreview (base name: "campaigns.preview")', function() {
      // uncomment below and update the code to test the property campaignsPreview
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsProgress (base name: "campaigns.progress")', function() {
      // uncomment below and update the code to test the property campaignsProgress
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsQueryPlaceholder (base name: "campaigns.queryPlaceholder")', function() {
      // uncomment below and update the code to test the property campaignsQueryPlaceholder
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsRateMinuteShort (base name: "campaigns.rateMinuteShort")', function() {
      // uncomment below and update the code to test the property campaignsRateMinuteShort
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsRawHTML (base name: "campaigns.rawHTML")', function() {
      // uncomment below and update the code to test the property campaignsRawHTML
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsRemoveAltText (base name: "campaigns.removeAltText")', function() {
      // uncomment below and update the code to test the property campaignsRemoveAltText
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsRichText (base name: "campaigns.richText")', function() {
      // uncomment below and update the code to test the property campaignsRichText
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsSchedule (base name: "campaigns.schedule")', function() {
      // uncomment below and update the code to test the property campaignsSchedule
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsScheduled (base name: "campaigns.scheduled")', function() {
      // uncomment below and update the code to test the property campaignsScheduled
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsSend (base name: "campaigns.send")', function() {
      // uncomment below and update the code to test the property campaignsSend
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsSendLater (base name: "campaigns.sendLater")', function() {
      // uncomment below and update the code to test the property campaignsSendLater
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsSendTest (base name: "campaigns.sendTest")', function() {
      // uncomment below and update the code to test the property campaignsSendTest
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsSendTestHelp (base name: "campaigns.sendTestHelp")', function() {
      // uncomment below and update the code to test the property campaignsSendTestHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsSendToLists (base name: "campaigns.sendToLists")', function() {
      // uncomment below and update the code to test the property campaignsSendToLists
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsSent (base name: "campaigns.sent")', function() {
      // uncomment below and update the code to test the property campaignsSent
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsStart (base name: "campaigns.start")', function() {
      // uncomment below and update the code to test the property campaignsStart
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsStarted (base name: "campaigns.started")', function() {
      // uncomment below and update the code to test the property campaignsStarted
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsStartedAt (base name: "campaigns.startedAt")', function() {
      // uncomment below and update the code to test the property campaignsStartedAt
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsStats (base name: "campaigns.stats")', function() {
      // uncomment below and update the code to test the property campaignsStats
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsStatusCancelled (base name: "campaigns.status.cancelled")', function() {
      // uncomment below and update the code to test the property campaignsStatusCancelled
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsStatusDraft (base name: "campaigns.status.draft")', function() {
      // uncomment below and update the code to test the property campaignsStatusDraft
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsStatusFinished (base name: "campaigns.status.finished")', function() {
      // uncomment below and update the code to test the property campaignsStatusFinished
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsStatusPaused (base name: "campaigns.status.paused")', function() {
      // uncomment below and update the code to test the property campaignsStatusPaused
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsStatusRunning (base name: "campaigns.status.running")', function() {
      // uncomment below and update the code to test the property campaignsStatusRunning
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsStatusScheduled (base name: "campaigns.status.scheduled")', function() {
      // uncomment below and update the code to test the property campaignsStatusScheduled
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsStatusChanged (base name: "campaigns.statusChanged")', function() {
      // uncomment below and update the code to test the property campaignsStatusChanged
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsSubject (base name: "campaigns.subject")', function() {
      // uncomment below and update the code to test the property campaignsSubject
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsTestEmails (base name: "campaigns.testEmails")', function() {
      // uncomment below and update the code to test the property campaignsTestEmails
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsTestSent (base name: "campaigns.testSent")', function() {
      // uncomment below and update the code to test the property campaignsTestSent
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsTimestamps (base name: "campaigns.timestamps")', function() {
      // uncomment below and update the code to test the property campaignsTimestamps
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsTrackLink (base name: "campaigns.trackLink")', function() {
      // uncomment below and update the code to test the property campaignsTrackLink
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property campaignsViews (base name: "campaigns.views")', function() {
      // uncomment below and update the code to test the property campaignsViews
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property dashboardCampaignViews (base name: "dashboard.campaignViews")', function() {
      // uncomment below and update the code to test the property dashboardCampaignViews
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property dashboardLinkClicks (base name: "dashboard.linkClicks")', function() {
      // uncomment below and update the code to test the property dashboardLinkClicks
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property dashboardMessagesSent (base name: "dashboard.messagesSent")', function() {
      // uncomment below and update the code to test the property dashboardMessagesSent
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property dashboardOrphanSubs (base name: "dashboard.orphanSubs")', function() {
      // uncomment below and update the code to test the property dashboardOrphanSubs
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailDataInfo (base name: "email.data.info")', function() {
      // uncomment below and update the code to test the property emailDataInfo
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailDataTitle (base name: "email.data.title")', function() {
      // uncomment below and update the code to test the property emailDataTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailOptinConfirmSub (base name: "email.optin.confirmSub")', function() {
      // uncomment below and update the code to test the property emailOptinConfirmSub
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailOptinConfirmSubHelp (base name: "email.optin.confirmSubHelp")', function() {
      // uncomment below and update the code to test the property emailOptinConfirmSubHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailOptinConfirmSubInfo (base name: "email.optin.confirmSubInfo")', function() {
      // uncomment below and update the code to test the property emailOptinConfirmSubInfo
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailOptinConfirmSubTitle (base name: "email.optin.confirmSubTitle")', function() {
      // uncomment below and update the code to test the property emailOptinConfirmSubTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailOptinConfirmSubWelcome (base name: "email.optin.confirmSubWelcome")', function() {
      // uncomment below and update the code to test the property emailOptinConfirmSubWelcome
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailOptinPrivateList (base name: "email.optin.privateList")', function() {
      // uncomment below and update the code to test the property emailOptinPrivateList
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailStatusCampaignReason (base name: "email.status.campaignReason")', function() {
      // uncomment below and update the code to test the property emailStatusCampaignReason
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailStatusCampaignSent (base name: "email.status.campaignSent")', function() {
      // uncomment below and update the code to test the property emailStatusCampaignSent
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailStatusCampaignUpdateTitle (base name: "email.status.campaignUpdateTitle")', function() {
      // uncomment below and update the code to test the property emailStatusCampaignUpdateTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailStatusImportFile (base name: "email.status.importFile")', function() {
      // uncomment below and update the code to test the property emailStatusImportFile
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailStatusImportRecords (base name: "email.status.importRecords")', function() {
      // uncomment below and update the code to test the property emailStatusImportRecords
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailStatusImportTitle (base name: "email.status.importTitle")', function() {
      // uncomment below and update the code to test the property emailStatusImportTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailStatusStatus (base name: "email.status.status")', function() {
      // uncomment below and update the code to test the property emailStatusStatus
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailUnsub (base name: "email.unsub")', function() {
      // uncomment below and update the code to test the property emailUnsub
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailUnsubHelp (base name: "email.unsubHelp")', function() {
      // uncomment below and update the code to test the property emailUnsubHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property emailViewInBrowser (base name: "email.viewInBrowser")', function() {
      // uncomment below and update the code to test the property emailViewInBrowser
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property formsFormHTML (base name: "forms.formHTML")', function() {
      // uncomment below and update the code to test the property formsFormHTML
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property formsFormHTMLHelp (base name: "forms.formHTMLHelp")', function() {
      // uncomment below and update the code to test the property formsFormHTMLHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property formsNoPublicLists (base name: "forms.noPublicLists")', function() {
      // uncomment below and update the code to test the property formsNoPublicLists
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property formsPublicLists (base name: "forms.publicLists")', function() {
      // uncomment below and update the code to test the property formsPublicLists
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property formsPublicSubPage (base name: "forms.publicSubPage")', function() {
      // uncomment below and update the code to test the property formsPublicSubPage
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property formsSelectHelp (base name: "forms.selectHelp")', function() {
      // uncomment below and update the code to test the property formsSelectHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property formsTitle (base name: "forms.title")', function() {
      // uncomment below and update the code to test the property formsTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsAdd (base name: "globals.buttons.add")', function() {
      // uncomment below and update the code to test the property globalsButtonsAdd
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsAddNew (base name: "globals.buttons.addNew")', function() {
      // uncomment below and update the code to test the property globalsButtonsAddNew
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsBack (base name: "globals.buttons.back")', function() {
      // uncomment below and update the code to test the property globalsButtonsBack
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsCancel (base name: "globals.buttons.cancel")', function() {
      // uncomment below and update the code to test the property globalsButtonsCancel
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsClone (base name: "globals.buttons.clone")', function() {
      // uncomment below and update the code to test the property globalsButtonsClone
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsClose (base name: "globals.buttons.close")', function() {
      // uncomment below and update the code to test the property globalsButtonsClose
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsContinue (base name: "globals.buttons.continue")', function() {
      // uncomment below and update the code to test the property globalsButtonsContinue
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsDelete (base name: "globals.buttons.delete")', function() {
      // uncomment below and update the code to test the property globalsButtonsDelete
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsDeleteAll (base name: "globals.buttons.deleteAll")', function() {
      // uncomment below and update the code to test the property globalsButtonsDeleteAll
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsEdit (base name: "globals.buttons.edit")', function() {
      // uncomment below and update the code to test the property globalsButtonsEdit
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsEnabled (base name: "globals.buttons.enabled")', function() {
      // uncomment below and update the code to test the property globalsButtonsEnabled
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsInsert (base name: "globals.buttons.insert")', function() {
      // uncomment below and update the code to test the property globalsButtonsInsert
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsLearnMore (base name: "globals.buttons.learnMore")', function() {
      // uncomment below and update the code to test the property globalsButtonsLearnMore
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsMore (base name: "globals.buttons.more")', function() {
      // uncomment below and update the code to test the property globalsButtonsMore
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsNew (base name: "globals.buttons.new")', function() {
      // uncomment below and update the code to test the property globalsButtonsNew
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsOk (base name: "globals.buttons.ok")', function() {
      // uncomment below and update the code to test the property globalsButtonsOk
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsRemove (base name: "globals.buttons.remove")', function() {
      // uncomment below and update the code to test the property globalsButtonsRemove
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsSave (base name: "globals.buttons.save")', function() {
      // uncomment below and update the code to test the property globalsButtonsSave
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsButtonsSaveChanges (base name: "globals.buttons.saveChanges")', function() {
      // uncomment below and update the code to test the property globalsButtonsSaveChanges
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsDays0 (base name: "globals.days.0")', function() {
      // uncomment below and update the code to test the property globalsDays0
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsDays1 (base name: "globals.days.1")', function() {
      // uncomment below and update the code to test the property globalsDays1
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsDays2 (base name: "globals.days.2")', function() {
      // uncomment below and update the code to test the property globalsDays2
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsDays3 (base name: "globals.days.3")', function() {
      // uncomment below and update the code to test the property globalsDays3
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsDays4 (base name: "globals.days.4")', function() {
      // uncomment below and update the code to test the property globalsDays4
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsDays5 (base name: "globals.days.5")', function() {
      // uncomment below and update the code to test the property globalsDays5
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsDays6 (base name: "globals.days.6")', function() {
      // uncomment below and update the code to test the property globalsDays6
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsDays7 (base name: "globals.days.7")', function() {
      // uncomment below and update the code to test the property globalsDays7
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsFieldsCreatedAt (base name: "globals.fields.createdAt")', function() {
      // uncomment below and update the code to test the property globalsFieldsCreatedAt
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsFieldsDescription (base name: "globals.fields.description")', function() {
      // uncomment below and update the code to test the property globalsFieldsDescription
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsFieldsId (base name: "globals.fields.id")', function() {
      // uncomment below and update the code to test the property globalsFieldsId
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsFieldsName (base name: "globals.fields.name")', function() {
      // uncomment below and update the code to test the property globalsFieldsName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsFieldsStatus (base name: "globals.fields.status")', function() {
      // uncomment below and update the code to test the property globalsFieldsStatus
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsFieldsType (base name: "globals.fields.type")', function() {
      // uncomment below and update the code to test the property globalsFieldsType
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsFieldsUpdatedAt (base name: "globals.fields.updatedAt")', function() {
      // uncomment below and update the code to test the property globalsFieldsUpdatedAt
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsFieldsUuid (base name: "globals.fields.uuid")', function() {
      // uncomment below and update the code to test the property globalsFieldsUuid
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesConfirm (base name: "globals.messages.confirm")', function() {
      // uncomment below and update the code to test the property globalsMessagesConfirm
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesConfirmDiscard (base name: "globals.messages.confirmDiscard")', function() {
      // uncomment below and update the code to test the property globalsMessagesConfirmDiscard
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesCreated (base name: "globals.messages.created")', function() {
      // uncomment below and update the code to test the property globalsMessagesCreated
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesDeleted (base name: "globals.messages.deleted")', function() {
      // uncomment below and update the code to test the property globalsMessagesDeleted
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesDeletedCount (base name: "globals.messages.deletedCount")', function() {
      // uncomment below and update the code to test the property globalsMessagesDeletedCount
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesDone (base name: "globals.messages.done")', function() {
      // uncomment below and update the code to test the property globalsMessagesDone
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesEmptyState (base name: "globals.messages.emptyState")', function() {
      // uncomment below and update the code to test the property globalsMessagesEmptyState
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesErrorCreating (base name: "globals.messages.errorCreating")', function() {
      // uncomment below and update the code to test the property globalsMessagesErrorCreating
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesErrorDeleting (base name: "globals.messages.errorDeleting")', function() {
      // uncomment below and update the code to test the property globalsMessagesErrorDeleting
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesErrorFetching (base name: "globals.messages.errorFetching")', function() {
      // uncomment below and update the code to test the property globalsMessagesErrorFetching
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesErrorInvalidIDs (base name: "globals.messages.errorInvalidIDs")', function() {
      // uncomment below and update the code to test the property globalsMessagesErrorInvalidIDs
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesErrorUUID (base name: "globals.messages.errorUUID")', function() {
      // uncomment below and update the code to test the property globalsMessagesErrorUUID
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesErrorUpdating (base name: "globals.messages.errorUpdating")', function() {
      // uncomment below and update the code to test the property globalsMessagesErrorUpdating
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesInternalError (base name: "globals.messages.internalError")', function() {
      // uncomment below and update the code to test the property globalsMessagesInternalError
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesInvalidData (base name: "globals.messages.invalidData")', function() {
      // uncomment below and update the code to test the property globalsMessagesInvalidData
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesInvalidID (base name: "globals.messages.invalidID")', function() {
      // uncomment below and update the code to test the property globalsMessagesInvalidID
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesInvalidUUID (base name: "globals.messages.invalidUUID")', function() {
      // uncomment below and update the code to test the property globalsMessagesInvalidUUID
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesMissingFields (base name: "globals.messages.missingFields")', function() {
      // uncomment below and update the code to test the property globalsMessagesMissingFields
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesNotFound (base name: "globals.messages.notFound")', function() {
      // uncomment below and update the code to test the property globalsMessagesNotFound
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesPasswordChange (base name: "globals.messages.passwordChange")', function() {
      // uncomment below and update the code to test the property globalsMessagesPasswordChange
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMessagesUpdated (base name: "globals.messages.updated")', function() {
      // uncomment below and update the code to test the property globalsMessagesUpdated
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMonths1 (base name: "globals.months.1")', function() {
      // uncomment below and update the code to test the property globalsMonths1
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMonths10 (base name: "globals.months.10")', function() {
      // uncomment below and update the code to test the property globalsMonths10
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMonths11 (base name: "globals.months.11")', function() {
      // uncomment below and update the code to test the property globalsMonths11
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMonths12 (base name: "globals.months.12")', function() {
      // uncomment below and update the code to test the property globalsMonths12
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMonths2 (base name: "globals.months.2")', function() {
      // uncomment below and update the code to test the property globalsMonths2
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMonths3 (base name: "globals.months.3")', function() {
      // uncomment below and update the code to test the property globalsMonths3
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMonths4 (base name: "globals.months.4")', function() {
      // uncomment below and update the code to test the property globalsMonths4
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMonths5 (base name: "globals.months.5")', function() {
      // uncomment below and update the code to test the property globalsMonths5
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMonths6 (base name: "globals.months.6")', function() {
      // uncomment below and update the code to test the property globalsMonths6
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMonths7 (base name: "globals.months.7")', function() {
      // uncomment below and update the code to test the property globalsMonths7
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMonths8 (base name: "globals.months.8")', function() {
      // uncomment below and update the code to test the property globalsMonths8
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsMonths9 (base name: "globals.months.9")', function() {
      // uncomment below and update the code to test the property globalsMonths9
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsStatesOff (base name: "globals.states.off")', function() {
      // uncomment below and update the code to test the property globalsStatesOff
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsAll (base name: "globals.terms.all")', function() {
      // uncomment below and update the code to test the property globalsTermsAll
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsAnalytics (base name: "globals.terms.analytics")', function() {
      // uncomment below and update the code to test the property globalsTermsAnalytics
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsBounce (base name: "globals.terms.bounce")', function() {
      // uncomment below and update the code to test the property globalsTermsBounce
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsBounces (base name: "globals.terms.bounces")', function() {
      // uncomment below and update the code to test the property globalsTermsBounces
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsCampaign (base name: "globals.terms.campaign")', function() {
      // uncomment below and update the code to test the property globalsTermsCampaign
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsCampaigns (base name: "globals.terms.campaigns")', function() {
      // uncomment below and update the code to test the property globalsTermsCampaigns
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsDashboard (base name: "globals.terms.dashboard")', function() {
      // uncomment below and update the code to test the property globalsTermsDashboard
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsDay (base name: "globals.terms.day")', function() {
      // uncomment below and update the code to test the property globalsTermsDay
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsHour (base name: "globals.terms.hour")', function() {
      // uncomment below and update the code to test the property globalsTermsHour
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsList (base name: "globals.terms.list")', function() {
      // uncomment below and update the code to test the property globalsTermsList
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsLists (base name: "globals.terms.lists")', function() {
      // uncomment below and update the code to test the property globalsTermsLists
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsMedia (base name: "globals.terms.media")', function() {
      // uncomment below and update the code to test the property globalsTermsMedia
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsMessenger (base name: "globals.terms.messenger")', function() {
      // uncomment below and update the code to test the property globalsTermsMessenger
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsMessengers (base name: "globals.terms.messengers")', function() {
      // uncomment below and update the code to test the property globalsTermsMessengers
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsMinute (base name: "globals.terms.minute")', function() {
      // uncomment below and update the code to test the property globalsTermsMinute
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsMonth (base name: "globals.terms.month")', function() {
      // uncomment below and update the code to test the property globalsTermsMonth
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsSecond (base name: "globals.terms.second")', function() {
      // uncomment below and update the code to test the property globalsTermsSecond
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsSettings (base name: "globals.terms.settings")', function() {
      // uncomment below and update the code to test the property globalsTermsSettings
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsSubscriber (base name: "globals.terms.subscriber")', function() {
      // uncomment below and update the code to test the property globalsTermsSubscriber
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsSubscribers (base name: "globals.terms.subscribers")', function() {
      // uncomment below and update the code to test the property globalsTermsSubscribers
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsSubscriptions (base name: "globals.terms.subscriptions")', function() {
      // uncomment below and update the code to test the property globalsTermsSubscriptions
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsTag (base name: "globals.terms.tag")', function() {
      // uncomment below and update the code to test the property globalsTermsTag
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsTags (base name: "globals.terms.tags")', function() {
      // uncomment below and update the code to test the property globalsTermsTags
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsTemplate (base name: "globals.terms.template")', function() {
      // uncomment below and update the code to test the property globalsTermsTemplate
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsTemplates (base name: "globals.terms.templates")', function() {
      // uncomment below and update the code to test the property globalsTermsTemplates
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsTx (base name: "globals.terms.tx")', function() {
      // uncomment below and update the code to test the property globalsTermsTx
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property globalsTermsYear (base name: "globals.terms.year")', function() {
      // uncomment below and update the code to test the property globalsTermsYear
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importAlreadyRunning (base name: "import.alreadyRunning")', function() {
      // uncomment below and update the code to test the property importAlreadyRunning
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importBlocklist (base name: "import.blocklist")', function() {
      // uncomment below and update the code to test the property importBlocklist
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importCsvDelim (base name: "import.csvDelim")', function() {
      // uncomment below and update the code to test the property importCsvDelim
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importCsvDelimHelp (base name: "import.csvDelimHelp")', function() {
      // uncomment below and update the code to test the property importCsvDelimHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importCsvExample (base name: "import.csvExample")', function() {
      // uncomment below and update the code to test the property importCsvExample
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importCsvFile (base name: "import.csvFile")', function() {
      // uncomment below and update the code to test the property importCsvFile
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importCsvFileHelp (base name: "import.csvFileHelp")', function() {
      // uncomment below and update the code to test the property importCsvFileHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importErrorCopyingFile (base name: "import.errorCopyingFile")', function() {
      // uncomment below and update the code to test the property importErrorCopyingFile
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importErrorProcessingZIP (base name: "import.errorProcessingZIP")', function() {
      // uncomment below and update the code to test the property importErrorProcessingZIP
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importErrorStarting (base name: "import.errorStarting")', function() {
      // uncomment below and update the code to test the property importErrorStarting
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importImportDone (base name: "import.importDone")', function() {
      // uncomment below and update the code to test the property importImportDone
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importImportStarted (base name: "import.importStarted")', function() {
      // uncomment below and update the code to test the property importImportStarted
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importInstructions (base name: "import.instructions")', function() {
      // uncomment below and update the code to test the property importInstructions
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importInstructionsHelp (base name: "import.instructionsHelp")', function() {
      // uncomment below and update the code to test the property importInstructionsHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importInvalidDelim (base name: "import.invalidDelim")', function() {
      // uncomment below and update the code to test the property importInvalidDelim
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importInvalidFile (base name: "import.invalidFile")', function() {
      // uncomment below and update the code to test the property importInvalidFile
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importInvalidMode (base name: "import.invalidMode")', function() {
      // uncomment below and update the code to test the property importInvalidMode
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importInvalidParams (base name: "import.invalidParams")', function() {
      // uncomment below and update the code to test the property importInvalidParams
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importInvalidSubStatus (base name: "import.invalidSubStatus")', function() {
      // uncomment below and update the code to test the property importInvalidSubStatus
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importListSubHelp (base name: "import.listSubHelp")', function() {
      // uncomment below and update the code to test the property importListSubHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importMode (base name: "import.mode")', function() {
      // uncomment below and update the code to test the property importMode
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importOverwrite (base name: "import.overwrite")', function() {
      // uncomment below and update the code to test the property importOverwrite
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importOverwriteHelp (base name: "import.overwriteHelp")', function() {
      // uncomment below and update the code to test the property importOverwriteHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importRecordsCount (base name: "import.recordsCount")', function() {
      // uncomment below and update the code to test the property importRecordsCount
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importStopImport (base name: "import.stopImport")', function() {
      // uncomment below and update the code to test the property importStopImport
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importSubscribe (base name: "import.subscribe")', function() {
      // uncomment below and update the code to test the property importSubscribe
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importTitle (base name: "import.title")', function() {
      // uncomment below and update the code to test the property importTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property importUpload (base name: "import.upload")', function() {
      // uncomment below and update the code to test the property importUpload
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsConfirmDelete (base name: "lists.confirmDelete")', function() {
      // uncomment below and update the code to test the property listsConfirmDelete
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsConfirmSub (base name: "lists.confirmSub")', function() {
      // uncomment below and update the code to test the property listsConfirmSub
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsInvalidName (base name: "lists.invalidName")', function() {
      // uncomment below and update the code to test the property listsInvalidName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsNewList (base name: "lists.newList")', function() {
      // uncomment below and update the code to test the property listsNewList
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsOptin (base name: "lists.optin")', function() {
      // uncomment below and update the code to test the property listsOptin
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsOptinHelp (base name: "lists.optinHelp")', function() {
      // uncomment below and update the code to test the property listsOptinHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsOptinTo (base name: "lists.optinTo")', function() {
      // uncomment below and update the code to test the property listsOptinTo
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsOptinsDouble (base name: "lists.optins.double")', function() {
      // uncomment below and update the code to test the property listsOptinsDouble
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsOptinsSingle (base name: "lists.optins.single")', function() {
      // uncomment below and update the code to test the property listsOptinsSingle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsSendCampaign (base name: "lists.sendCampaign")', function() {
      // uncomment below and update the code to test the property listsSendCampaign
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsSendOptinCampaign (base name: "lists.sendOptinCampaign")', function() {
      // uncomment below and update the code to test the property listsSendOptinCampaign
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsType (base name: "lists.type")', function() {
      // uncomment below and update the code to test the property listsType
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsTypeHelp (base name: "lists.typeHelp")', function() {
      // uncomment below and update the code to test the property listsTypeHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsTypesPrivate (base name: "lists.types.private")', function() {
      // uncomment below and update the code to test the property listsTypesPrivate
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property listsTypesPublic (base name: "lists.types.public")', function() {
      // uncomment below and update the code to test the property listsTypesPublic
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property logsTitle (base name: "logs.title")', function() {
      // uncomment below and update the code to test the property logsTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property maintenanceHelp (base name: "maintenance.help")', function() {
      // uncomment below and update the code to test the property maintenanceHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property maintenanceMaintenanceUnconfirmedOptins (base name: "maintenance.maintenance.unconfirmedOptins")', function() {
      // uncomment below and update the code to test the property maintenanceMaintenanceUnconfirmedOptins
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property maintenanceOlderThan (base name: "maintenance.olderThan")', function() {
      // uncomment below and update the code to test the property maintenanceOlderThan
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property maintenanceTitle (base name: "maintenance.title")', function() {
      // uncomment below and update the code to test the property maintenanceTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property maintenanceUnconfirmedSubs (base name: "maintenance.unconfirmedSubs")', function() {
      // uncomment below and update the code to test the property maintenanceUnconfirmedSubs
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property mediaErrorReadingFile (base name: "media.errorReadingFile")', function() {
      // uncomment below and update the code to test the property mediaErrorReadingFile
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property mediaErrorResizing (base name: "media.errorResizing")', function() {
      // uncomment below and update the code to test the property mediaErrorResizing
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property mediaErrorSavingThumbnail (base name: "media.errorSavingThumbnail")', function() {
      // uncomment below and update the code to test the property mediaErrorSavingThumbnail
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property mediaErrorUploading (base name: "media.errorUploading")', function() {
      // uncomment below and update the code to test the property mediaErrorUploading
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property mediaInvalidFile (base name: "media.invalidFile")', function() {
      // uncomment below and update the code to test the property mediaInvalidFile
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property mediaTitle (base name: "media.title")', function() {
      // uncomment below and update the code to test the property mediaTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property mediaUnsupportedFileType (base name: "media.unsupportedFileType")', function() {
      // uncomment below and update the code to test the property mediaUnsupportedFileType
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property mediaUpload (base name: "media.upload")', function() {
      // uncomment below and update the code to test the property mediaUpload
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property mediaUploadHelp (base name: "media.uploadHelp")', function() {
      // uncomment below and update the code to test the property mediaUploadHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property mediaUploadImage (base name: "media.uploadImage")', function() {
      // uncomment below and update the code to test the property mediaUploadImage
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property menuAllCampaigns (base name: "menu.allCampaigns")', function() {
      // uncomment below and update the code to test the property menuAllCampaigns
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property menuAllLists (base name: "menu.allLists")', function() {
      // uncomment below and update the code to test the property menuAllLists
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property menuAllSubscribers (base name: "menu.allSubscribers")', function() {
      // uncomment below and update the code to test the property menuAllSubscribers
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property menuDashboard (base name: "menu.dashboard")', function() {
      // uncomment below and update the code to test the property menuDashboard
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property menuForms (base name: "menu.forms")', function() {
      // uncomment below and update the code to test the property menuForms
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property menuImport (base name: "menu.import")', function() {
      // uncomment below and update the code to test the property menuImport
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property menuLogs (base name: "menu.logs")', function() {
      // uncomment below and update the code to test the property menuLogs
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property menuMaintenance (base name: "menu.maintenance")', function() {
      // uncomment below and update the code to test the property menuMaintenance
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property menuMedia (base name: "menu.media")', function() {
      // uncomment below and update the code to test the property menuMedia
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property menuNewCampaign (base name: "menu.newCampaign")', function() {
      // uncomment below and update the code to test the property menuNewCampaign
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property menuSettings (base name: "menu.settings")', function() {
      // uncomment below and update the code to test the property menuSettings
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicArchiveEmpty (base name: "public.archiveEmpty")', function() {
      // uncomment below and update the code to test the property publicArchiveEmpty
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicArchiveTitle (base name: "public.archiveTitle")', function() {
      // uncomment below and update the code to test the property publicArchiveTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicBlocklisted (base name: "public.blocklisted")', function() {
      // uncomment below and update the code to test the property publicBlocklisted
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicCampaignNotFound (base name: "public.campaignNotFound")', function() {
      // uncomment below and update the code to test the property publicCampaignNotFound
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicConfirmOptinSubTitle (base name: "public.confirmOptinSubTitle")', function() {
      // uncomment below and update the code to test the property publicConfirmOptinSubTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicConfirmSub (base name: "public.confirmSub")', function() {
      // uncomment below and update the code to test the property publicConfirmSub
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicConfirmSubInfo (base name: "public.confirmSubInfo")', function() {
      // uncomment below and update the code to test the property publicConfirmSubInfo
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicConfirmSubTitle (base name: "public.confirmSubTitle")', function() {
      // uncomment below and update the code to test the property publicConfirmSubTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicDataRemoved (base name: "public.dataRemoved")', function() {
      // uncomment below and update the code to test the property publicDataRemoved
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicDataRemovedTitle (base name: "public.dataRemovedTitle")', function() {
      // uncomment below and update the code to test the property publicDataRemovedTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicDataSent (base name: "public.dataSent")', function() {
      // uncomment below and update the code to test the property publicDataSent
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicDataSentTitle (base name: "public.dataSentTitle")', function() {
      // uncomment below and update the code to test the property publicDataSentTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicErrorFetchingCampaign (base name: "public.errorFetchingCampaign")', function() {
      // uncomment below and update the code to test the property publicErrorFetchingCampaign
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicErrorFetchingEmail (base name: "public.errorFetchingEmail")', function() {
      // uncomment below and update the code to test the property publicErrorFetchingEmail
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicErrorFetchingLists (base name: "public.errorFetchingLists")', function() {
      // uncomment below and update the code to test the property publicErrorFetchingLists
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicErrorProcessingRequest (base name: "public.errorProcessingRequest")', function() {
      // uncomment below and update the code to test the property publicErrorProcessingRequest
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicErrorTitle (base name: "public.errorTitle")', function() {
      // uncomment below and update the code to test the property publicErrorTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicInvalidFeature (base name: "public.invalidFeature")', function() {
      // uncomment below and update the code to test the property publicInvalidFeature
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicInvalidLink (base name: "public.invalidLink")', function() {
      // uncomment below and update the code to test the property publicInvalidLink
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicManagePrefs (base name: "public.managePrefs")', function() {
      // uncomment below and update the code to test the property publicManagePrefs
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicManagePrefsUnsub (base name: "public.managePrefsUnsub")', function() {
      // uncomment below and update the code to test the property publicManagePrefsUnsub
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicNoListsAvailable (base name: "public.noListsAvailable")', function() {
      // uncomment below and update the code to test the property publicNoListsAvailable
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicNoListsSelected (base name: "public.noListsSelected")', function() {
      // uncomment below and update the code to test the property publicNoListsSelected
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicNoSubInfo (base name: "public.noSubInfo")', function() {
      // uncomment below and update the code to test the property publicNoSubInfo
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicNoSubTitle (base name: "public.noSubTitle")', function() {
      // uncomment below and update the code to test the property publicNoSubTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicNotFoundTitle (base name: "public.notFoundTitle")', function() {
      // uncomment below and update the code to test the property publicNotFoundTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicPrefsSaved (base name: "public.prefsSaved")', function() {
      // uncomment below and update the code to test the property publicPrefsSaved
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicPrivacyConfirmWipe (base name: "public.privacyConfirmWipe")', function() {
      // uncomment below and update the code to test the property publicPrivacyConfirmWipe
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicPrivacyExport (base name: "public.privacyExport")', function() {
      // uncomment below and update the code to test the property publicPrivacyExport
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicPrivacyExportHelp (base name: "public.privacyExportHelp")', function() {
      // uncomment below and update the code to test the property publicPrivacyExportHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicPrivacyTitle (base name: "public.privacyTitle")', function() {
      // uncomment below and update the code to test the property publicPrivacyTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicPrivacyWipe (base name: "public.privacyWipe")', function() {
      // uncomment below and update the code to test the property publicPrivacyWipe
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicPrivacyWipeHelp (base name: "public.privacyWipeHelp")', function() {
      // uncomment below and update the code to test the property publicPrivacyWipeHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicSub (base name: "public.sub")', function() {
      // uncomment below and update the code to test the property publicSub
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicSubConfirmed (base name: "public.subConfirmed")', function() {
      // uncomment below and update the code to test the property publicSubConfirmed
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicSubConfirmedTitle (base name: "public.subConfirmedTitle")', function() {
      // uncomment below and update the code to test the property publicSubConfirmedTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicSubName (base name: "public.subName")', function() {
      // uncomment below and update the code to test the property publicSubName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicSubNotFound (base name: "public.subNotFound")', function() {
      // uncomment below and update the code to test the property publicSubNotFound
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicSubOptinPending (base name: "public.subOptinPending")', function() {
      // uncomment below and update the code to test the property publicSubOptinPending
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicSubPrivateList (base name: "public.subPrivateList")', function() {
      // uncomment below and update the code to test the property publicSubPrivateList
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicSubTitle (base name: "public.subTitle")', function() {
      // uncomment below and update the code to test the property publicSubTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicUnsub (base name: "public.unsub")', function() {
      // uncomment below and update the code to test the property publicUnsub
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicUnsubFull (base name: "public.unsubFull")', function() {
      // uncomment below and update the code to test the property publicUnsubFull
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicUnsubHelp (base name: "public.unsubHelp")', function() {
      // uncomment below and update the code to test the property publicUnsubHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicUnsubTitle (base name: "public.unsubTitle")', function() {
      // uncomment below and update the code to test the property publicUnsubTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicUnsubbedInfo (base name: "public.unsubbedInfo")', function() {
      // uncomment below and update the code to test the property publicUnsubbedInfo
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicUnsubbedTitle (base name: "public.unsubbedTitle")', function() {
      // uncomment below and update the code to test the property publicUnsubbedTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property publicUnsubscribeTitle (base name: "public.unsubscribeTitle")', function() {
      // uncomment below and update the code to test the property publicUnsubscribeTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsAppearanceAdminHelp (base name: "settings.appearance.adminHelp")', function() {
      // uncomment below and update the code to test the property settingsAppearanceAdminHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsAppearanceAdminName (base name: "settings.appearance.adminName")', function() {
      // uncomment below and update the code to test the property settingsAppearanceAdminName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsAppearanceCustomCSS (base name: "settings.appearance.customCSS")', function() {
      // uncomment below and update the code to test the property settingsAppearanceCustomCSS
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsAppearanceCustomJS (base name: "settings.appearance.customJS")', function() {
      // uncomment below and update the code to test the property settingsAppearanceCustomJS
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsAppearanceName (base name: "settings.appearance.name")', function() {
      // uncomment below and update the code to test the property settingsAppearanceName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsAppearancePublicHelp (base name: "settings.appearance.publicHelp")', function() {
      // uncomment below and update the code to test the property settingsAppearancePublicHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsAppearancePublicName (base name: "settings.appearance.publicName")', function() {
      // uncomment below and update the code to test the property settingsAppearancePublicName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesAction (base name: "settings.bounces.action")', function() {
      // uncomment below and update the code to test the property settingsBouncesAction
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesBlocklist (base name: "settings.bounces.blocklist")', function() {
      // uncomment below and update the code to test the property settingsBouncesBlocklist
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesCount (base name: "settings.bounces.count")', function() {
      // uncomment below and update the code to test the property settingsBouncesCount
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesCountHelp (base name: "settings.bounces.countHelp")', function() {
      // uncomment below and update the code to test the property settingsBouncesCountHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesDelete (base name: "settings.bounces.delete")', function() {
      // uncomment below and update the code to test the property settingsBouncesDelete
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesEnable (base name: "settings.bounces.enable")', function() {
      // uncomment below and update the code to test the property settingsBouncesEnable
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesEnableMailbox (base name: "settings.bounces.enableMailbox")', function() {
      // uncomment below and update the code to test the property settingsBouncesEnableMailbox
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesEnableSES (base name: "settings.bounces.enableSES")', function() {
      // uncomment below and update the code to test the property settingsBouncesEnableSES
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesEnableSendgrid (base name: "settings.bounces.enableSendgrid")', function() {
      // uncomment below and update the code to test the property settingsBouncesEnableSendgrid
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesEnableWebhooks (base name: "settings.bounces.enableWebhooks")', function() {
      // uncomment below and update the code to test the property settingsBouncesEnableWebhooks
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesEnabled (base name: "settings.bounces.enabled")', function() {
      // uncomment below and update the code to test the property settingsBouncesEnabled
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesFolder (base name: "settings.bounces.folder")', function() {
      // uncomment below and update the code to test the property settingsBouncesFolder
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesFolderHelp (base name: "settings.bounces.folderHelp")', function() {
      // uncomment below and update the code to test the property settingsBouncesFolderHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesInvalidScanInterval (base name: "settings.bounces.invalidScanInterval")', function() {
      // uncomment below and update the code to test the property settingsBouncesInvalidScanInterval
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesName (base name: "settings.bounces.name")', function() {
      // uncomment below and update the code to test the property settingsBouncesName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesScanInterval (base name: "settings.bounces.scanInterval")', function() {
      // uncomment below and update the code to test the property settingsBouncesScanInterval
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesScanIntervalHelp (base name: "settings.bounces.scanIntervalHelp")', function() {
      // uncomment below and update the code to test the property settingsBouncesScanIntervalHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesSendgridKey (base name: "settings.bounces.sendgridKey")', function() {
      // uncomment below and update the code to test the property settingsBouncesSendgridKey
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesType (base name: "settings.bounces.type")', function() {
      // uncomment below and update the code to test the property settingsBouncesType
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsBouncesUsername (base name: "settings.bounces.username")', function() {
      // uncomment below and update the code to test the property settingsBouncesUsername
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsConfirmRestart (base name: "settings.confirmRestart")', function() {
      // uncomment below and update the code to test the property settingsConfirmRestart
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsDuplicateMessengerName (base name: "settings.duplicateMessengerName")', function() {
      // uncomment below and update the code to test the property settingsDuplicateMessengerName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsErrorEncoding (base name: "settings.errorEncoding")', function() {
      // uncomment below and update the code to test the property settingsErrorEncoding
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsErrorNoSMTP (base name: "settings.errorNoSMTP")', function() {
      // uncomment below and update the code to test the property settingsErrorNoSMTP
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralAdminNotifEmails (base name: "settings.general.adminNotifEmails")', function() {
      // uncomment below and update the code to test the property settingsGeneralAdminNotifEmails
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralAdminNotifEmailsHelp (base name: "settings.general.adminNotifEmailsHelp")', function() {
      // uncomment below and update the code to test the property settingsGeneralAdminNotifEmailsHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralCheckUpdates (base name: "settings.general.checkUpdates")', function() {
      // uncomment below and update the code to test the property settingsGeneralCheckUpdates
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralCheckUpdatesHelp (base name: "settings.general.checkUpdatesHelp")', function() {
      // uncomment below and update the code to test the property settingsGeneralCheckUpdatesHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralEnablePublicArchive (base name: "settings.general.enablePublicArchive")', function() {
      // uncomment below and update the code to test the property settingsGeneralEnablePublicArchive
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralEnablePublicArchiveHelp (base name: "settings.general.enablePublicArchiveHelp")', function() {
      // uncomment below and update the code to test the property settingsGeneralEnablePublicArchiveHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralEnablePublicSubPage (base name: "settings.general.enablePublicSubPage")', function() {
      // uncomment below and update the code to test the property settingsGeneralEnablePublicSubPage
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralEnablePublicSubPageHelp (base name: "settings.general.enablePublicSubPageHelp")', function() {
      // uncomment below and update the code to test the property settingsGeneralEnablePublicSubPageHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralFaviconURL (base name: "settings.general.faviconURL")', function() {
      // uncomment below and update the code to test the property settingsGeneralFaviconURL
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralFaviconURLHelp (base name: "settings.general.faviconURLHelp")', function() {
      // uncomment below and update the code to test the property settingsGeneralFaviconURLHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralFromEmail (base name: "settings.general.fromEmail")', function() {
      // uncomment below and update the code to test the property settingsGeneralFromEmail
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralFromEmailHelp (base name: "settings.general.fromEmailHelp")', function() {
      // uncomment below and update the code to test the property settingsGeneralFromEmailHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralLanguage (base name: "settings.general.language")', function() {
      // uncomment below and update the code to test the property settingsGeneralLanguage
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralLogoURL (base name: "settings.general.logoURL")', function() {
      // uncomment below and update the code to test the property settingsGeneralLogoURL
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralLogoURLHelp (base name: "settings.general.logoURLHelp")', function() {
      // uncomment below and update the code to test the property settingsGeneralLogoURLHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralName (base name: "settings.general.name")', function() {
      // uncomment below and update the code to test the property settingsGeneralName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralRootURL (base name: "settings.general.rootURL")', function() {
      // uncomment below and update the code to test the property settingsGeneralRootURL
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralRootURLHelp (base name: "settings.general.rootURLHelp")', function() {
      // uncomment below and update the code to test the property settingsGeneralRootURLHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralSendOptinConfirm (base name: "settings.general.sendOptinConfirm")', function() {
      // uncomment below and update the code to test the property settingsGeneralSendOptinConfirm
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralSendOptinConfirmHelp (base name: "settings.general.sendOptinConfirmHelp")', function() {
      // uncomment below and update the code to test the property settingsGeneralSendOptinConfirmHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsGeneralSiteName (base name: "settings.general.siteName")', function() {
      // uncomment below and update the code to test the property settingsGeneralSiteName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsInvalidMessengerName (base name: "settings.invalidMessengerName")', function() {
      // uncomment below and update the code to test the property settingsInvalidMessengerName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverAuthProtocol (base name: "settings.mailserver.authProtocol")', function() {
      // uncomment below and update the code to test the property settingsMailserverAuthProtocol
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverHost (base name: "settings.mailserver.host")', function() {
      // uncomment below and update the code to test the property settingsMailserverHost
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverHostHelp (base name: "settings.mailserver.hostHelp")', function() {
      // uncomment below and update the code to test the property settingsMailserverHostHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverIdleTimeout (base name: "settings.mailserver.idleTimeout")', function() {
      // uncomment below and update the code to test the property settingsMailserverIdleTimeout
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverIdleTimeoutHelp (base name: "settings.mailserver.idleTimeoutHelp")', function() {
      // uncomment below and update the code to test the property settingsMailserverIdleTimeoutHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverMaxConns (base name: "settings.mailserver.maxConns")', function() {
      // uncomment below and update the code to test the property settingsMailserverMaxConns
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverMaxConnsHelp (base name: "settings.mailserver.maxConnsHelp")', function() {
      // uncomment below and update the code to test the property settingsMailserverMaxConnsHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverPassword (base name: "settings.mailserver.password")', function() {
      // uncomment below and update the code to test the property settingsMailserverPassword
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverPasswordHelp (base name: "settings.mailserver.passwordHelp")', function() {
      // uncomment below and update the code to test the property settingsMailserverPasswordHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverPort (base name: "settings.mailserver.port")', function() {
      // uncomment below and update the code to test the property settingsMailserverPort
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverPortHelp (base name: "settings.mailserver.portHelp")', function() {
      // uncomment below and update the code to test the property settingsMailserverPortHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverSkipTLS (base name: "settings.mailserver.skipTLS")', function() {
      // uncomment below and update the code to test the property settingsMailserverSkipTLS
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverSkipTLSHelp (base name: "settings.mailserver.skipTLSHelp")', function() {
      // uncomment below and update the code to test the property settingsMailserverSkipTLSHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverTls (base name: "settings.mailserver.tls")', function() {
      // uncomment below and update the code to test the property settingsMailserverTls
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverTlsHelp (base name: "settings.mailserver.tlsHelp")', function() {
      // uncomment below and update the code to test the property settingsMailserverTlsHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverUsername (base name: "settings.mailserver.username")', function() {
      // uncomment below and update the code to test the property settingsMailserverUsername
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverWaitTimeout (base name: "settings.mailserver.waitTimeout")', function() {
      // uncomment below and update the code to test the property settingsMailserverWaitTimeout
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMailserverWaitTimeoutHelp (base name: "settings.mailserver.waitTimeoutHelp")', function() {
      // uncomment below and update the code to test the property settingsMailserverWaitTimeoutHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaProvider (base name: "settings.media.provider")', function() {
      // uncomment below and update the code to test the property settingsMediaProvider
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3Bucket (base name: "settings.media.s3.bucket")', function() {
      // uncomment below and update the code to test the property settingsMediaS3Bucket
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3BucketPath (base name: "settings.media.s3.bucketPath")', function() {
      // uncomment below and update the code to test the property settingsMediaS3BucketPath
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3BucketPathHelp (base name: "settings.media.s3.bucketPathHelp")', function() {
      // uncomment below and update the code to test the property settingsMediaS3BucketPathHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3BucketType (base name: "settings.media.s3.bucketType")', function() {
      // uncomment below and update the code to test the property settingsMediaS3BucketType
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3BucketTypePrivate (base name: "settings.media.s3.bucketTypePrivate")', function() {
      // uncomment below and update the code to test the property settingsMediaS3BucketTypePrivate
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3BucketTypePublic (base name: "settings.media.s3.bucketTypePublic")', function() {
      // uncomment below and update the code to test the property settingsMediaS3BucketTypePublic
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3Key (base name: "settings.media.s3.key")', function() {
      // uncomment below and update the code to test the property settingsMediaS3Key
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3PublicURL (base name: "settings.media.s3.publicURL")', function() {
      // uncomment below and update the code to test the property settingsMediaS3PublicURL
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3PublicURLHelp (base name: "settings.media.s3.publicURLHelp")', function() {
      // uncomment below and update the code to test the property settingsMediaS3PublicURLHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3Region (base name: "settings.media.s3.region")', function() {
      // uncomment below and update the code to test the property settingsMediaS3Region
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3Secret (base name: "settings.media.s3.secret")', function() {
      // uncomment below and update the code to test the property settingsMediaS3Secret
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3UploadExpiry (base name: "settings.media.s3.uploadExpiry")', function() {
      // uncomment below and update the code to test the property settingsMediaS3UploadExpiry
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3UploadExpiryHelp (base name: "settings.media.s3.uploadExpiryHelp")', function() {
      // uncomment below and update the code to test the property settingsMediaS3UploadExpiryHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3Url (base name: "settings.media.s3.url")', function() {
      // uncomment below and update the code to test the property settingsMediaS3Url
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaS3UrlHelp (base name: "settings.media.s3.urlHelp")', function() {
      // uncomment below and update the code to test the property settingsMediaS3UrlHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaTitle (base name: "settings.media.title")', function() {
      // uncomment below and update the code to test the property settingsMediaTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaUploadPath (base name: "settings.media.upload.path")', function() {
      // uncomment below and update the code to test the property settingsMediaUploadPath
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaUploadPathHelp (base name: "settings.media.upload.pathHelp")', function() {
      // uncomment below and update the code to test the property settingsMediaUploadPathHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaUploadUri (base name: "settings.media.upload.uri")', function() {
      // uncomment below and update the code to test the property settingsMediaUploadUri
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMediaUploadUriHelp (base name: "settings.media.upload.uriHelp")', function() {
      // uncomment below and update the code to test the property settingsMediaUploadUriHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersMaxConns (base name: "settings.messengers.maxConns")', function() {
      // uncomment below and update the code to test the property settingsMessengersMaxConns
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersMaxConnsHelp (base name: "settings.messengers.maxConnsHelp")', function() {
      // uncomment below and update the code to test the property settingsMessengersMaxConnsHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersMessageSaved (base name: "settings.messengers.messageSaved")', function() {
      // uncomment below and update the code to test the property settingsMessengersMessageSaved
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersName (base name: "settings.messengers.name")', function() {
      // uncomment below and update the code to test the property settingsMessengersName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersNameHelp (base name: "settings.messengers.nameHelp")', function() {
      // uncomment below and update the code to test the property settingsMessengersNameHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersPassword (base name: "settings.messengers.password")', function() {
      // uncomment below and update the code to test the property settingsMessengersPassword
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersRetries (base name: "settings.messengers.retries")', function() {
      // uncomment below and update the code to test the property settingsMessengersRetries
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersRetriesHelp (base name: "settings.messengers.retriesHelp")', function() {
      // uncomment below and update the code to test the property settingsMessengersRetriesHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersSkipTLSHelp (base name: "settings.messengers.skipTLSHelp")', function() {
      // uncomment below and update the code to test the property settingsMessengersSkipTLSHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersTimeout (base name: "settings.messengers.timeout")', function() {
      // uncomment below and update the code to test the property settingsMessengersTimeout
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersTimeoutHelp (base name: "settings.messengers.timeoutHelp")', function() {
      // uncomment below and update the code to test the property settingsMessengersTimeoutHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersUrl (base name: "settings.messengers.url")', function() {
      // uncomment below and update the code to test the property settingsMessengersUrl
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersUrlHelp (base name: "settings.messengers.urlHelp")', function() {
      // uncomment below and update the code to test the property settingsMessengersUrlHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsMessengersUsername (base name: "settings.messengers.username")', function() {
      // uncomment below and update the code to test the property settingsMessengersUsername
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsNeedsRestart (base name: "settings.needsRestart")', function() {
      // uncomment below and update the code to test the property settingsNeedsRestart
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceBatchSize (base name: "settings.performance.batchSize")', function() {
      // uncomment below and update the code to test the property settingsPerformanceBatchSize
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceBatchSizeHelp (base name: "settings.performance.batchSizeHelp")', function() {
      // uncomment below and update the code to test the property settingsPerformanceBatchSizeHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceConcurrency (base name: "settings.performance.concurrency")', function() {
      // uncomment below and update the code to test the property settingsPerformanceConcurrency
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceConcurrencyHelp (base name: "settings.performance.concurrencyHelp")', function() {
      // uncomment below and update the code to test the property settingsPerformanceConcurrencyHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceMaxErrThreshold (base name: "settings.performance.maxErrThreshold")', function() {
      // uncomment below and update the code to test the property settingsPerformanceMaxErrThreshold
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceMaxErrThresholdHelp (base name: "settings.performance.maxErrThresholdHelp")', function() {
      // uncomment below and update the code to test the property settingsPerformanceMaxErrThresholdHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceMessageRate (base name: "settings.performance.messageRate")', function() {
      // uncomment below and update the code to test the property settingsPerformanceMessageRate
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceMessageRateHelp (base name: "settings.performance.messageRateHelp")', function() {
      // uncomment below and update the code to test the property settingsPerformanceMessageRateHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceName (base name: "settings.performance.name")', function() {
      // uncomment below and update the code to test the property settingsPerformanceName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceSlidingWindow (base name: "settings.performance.slidingWindow")', function() {
      // uncomment below and update the code to test the property settingsPerformanceSlidingWindow
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceSlidingWindowDuration (base name: "settings.performance.slidingWindowDuration")', function() {
      // uncomment below and update the code to test the property settingsPerformanceSlidingWindowDuration
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceSlidingWindowDurationHelp (base name: "settings.performance.slidingWindowDurationHelp")', function() {
      // uncomment below and update the code to test the property settingsPerformanceSlidingWindowDurationHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceSlidingWindowHelp (base name: "settings.performance.slidingWindowHelp")', function() {
      // uncomment below and update the code to test the property settingsPerformanceSlidingWindowHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceSlidingWindowRate (base name: "settings.performance.slidingWindowRate")', function() {
      // uncomment below and update the code to test the property settingsPerformanceSlidingWindowRate
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPerformanceSlidingWindowRateHelp (base name: "settings.performance.slidingWindowRateHelp")', function() {
      // uncomment below and update the code to test the property settingsPerformanceSlidingWindowRateHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyAllowBlocklist (base name: "settings.privacy.allowBlocklist")', function() {
      // uncomment below and update the code to test the property settingsPrivacyAllowBlocklist
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyAllowBlocklistHelp (base name: "settings.privacy.allowBlocklistHelp")', function() {
      // uncomment below and update the code to test the property settingsPrivacyAllowBlocklistHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyAllowExport (base name: "settings.privacy.allowExport")', function() {
      // uncomment below and update the code to test the property settingsPrivacyAllowExport
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyAllowExportHelp (base name: "settings.privacy.allowExportHelp")', function() {
      // uncomment below and update the code to test the property settingsPrivacyAllowExportHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyAllowPrefs (base name: "settings.privacy.allowPrefs")', function() {
      // uncomment below and update the code to test the property settingsPrivacyAllowPrefs
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyAllowPrefsHelp (base name: "settings.privacy.allowPrefsHelp")', function() {
      // uncomment below and update the code to test the property settingsPrivacyAllowPrefsHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyAllowWipe (base name: "settings.privacy.allowWipe")', function() {
      // uncomment below and update the code to test the property settingsPrivacyAllowWipe
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyAllowWipeHelp (base name: "settings.privacy.allowWipeHelp")', function() {
      // uncomment below and update the code to test the property settingsPrivacyAllowWipeHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyDomainBlocklist (base name: "settings.privacy.domainBlocklist")', function() {
      // uncomment below and update the code to test the property settingsPrivacyDomainBlocklist
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyDomainBlocklistHelp (base name: "settings.privacy.domainBlocklistHelp")', function() {
      // uncomment below and update the code to test the property settingsPrivacyDomainBlocklistHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyIndividualSubTracking (base name: "settings.privacy.individualSubTracking")', function() {
      // uncomment below and update the code to test the property settingsPrivacyIndividualSubTracking
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyIndividualSubTrackingHelp (base name: "settings.privacy.individualSubTrackingHelp")', function() {
      // uncomment below and update the code to test the property settingsPrivacyIndividualSubTrackingHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyListUnsubHeader (base name: "settings.privacy.listUnsubHeader")', function() {
      // uncomment below and update the code to test the property settingsPrivacyListUnsubHeader
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyListUnsubHeaderHelp (base name: "settings.privacy.listUnsubHeaderHelp")', function() {
      // uncomment below and update the code to test the property settingsPrivacyListUnsubHeaderHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsPrivacyName (base name: "settings.privacy.name")', function() {
      // uncomment below and update the code to test the property settingsPrivacyName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsRestart (base name: "settings.restart")', function() {
      // uncomment below and update the code to test the property settingsRestart
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpCustomHeaders (base name: "settings.smtp.customHeaders")', function() {
      // uncomment below and update the code to test the property settingsSmtpCustomHeaders
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpCustomHeadersHelp (base name: "settings.smtp.customHeadersHelp")', function() {
      // uncomment below and update the code to test the property settingsSmtpCustomHeadersHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpEnabled (base name: "settings.smtp.enabled")', function() {
      // uncomment below and update the code to test the property settingsSmtpEnabled
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpHeloHost (base name: "settings.smtp.heloHost")', function() {
      // uncomment below and update the code to test the property settingsSmtpHeloHost
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpHeloHostHelp (base name: "settings.smtp.heloHostHelp")', function() {
      // uncomment below and update the code to test the property settingsSmtpHeloHostHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpName (base name: "settings.smtp.name")', function() {
      // uncomment below and update the code to test the property settingsSmtpName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpRetries (base name: "settings.smtp.retries")', function() {
      // uncomment below and update the code to test the property settingsSmtpRetries
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpRetriesHelp (base name: "settings.smtp.retriesHelp")', function() {
      // uncomment below and update the code to test the property settingsSmtpRetriesHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpSendTest (base name: "settings.smtp.sendTest")', function() {
      // uncomment below and update the code to test the property settingsSmtpSendTest
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpSetCustomHeaders (base name: "settings.smtp.setCustomHeaders")', function() {
      // uncomment below and update the code to test the property settingsSmtpSetCustomHeaders
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpTestConnection (base name: "settings.smtp.testConnection")', function() {
      // uncomment below and update the code to test the property settingsSmtpTestConnection
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpTestEnterEmail (base name: "settings.smtp.testEnterEmail")', function() {
      // uncomment below and update the code to test the property settingsSmtpTestEnterEmail
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsSmtpToEmail (base name: "settings.smtp.toEmail")', function() {
      // uncomment below and update the code to test the property settingsSmtpToEmail
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsTitle (base name: "settings.title")', function() {
      // uncomment below and update the code to test the property settingsTitle
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property settingsUpdateAvailable (base name: "settings.updateAvailable")', function() {
      // uncomment below and update the code to test the property settingsUpdateAvailable
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersAdvancedQuery (base name: "subscribers.advancedQuery")', function() {
      // uncomment below and update the code to test the property subscribersAdvancedQuery
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersAdvancedQueryHelp (base name: "subscribers.advancedQueryHelp")', function() {
      // uncomment below and update the code to test the property subscribersAdvancedQueryHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersAttribs (base name: "subscribers.attribs")', function() {
      // uncomment below and update the code to test the property subscribersAttribs
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersAttribsHelp (base name: "subscribers.attribsHelp")', function() {
      // uncomment below and update the code to test the property subscribersAttribsHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersBlocklistedHelp (base name: "subscribers.blocklistedHelp")', function() {
      // uncomment below and update the code to test the property subscribersBlocklistedHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersConfirmBlocklist (base name: "subscribers.confirmBlocklist")', function() {
      // uncomment below and update the code to test the property subscribersConfirmBlocklist
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersConfirmDelete (base name: "subscribers.confirmDelete")', function() {
      // uncomment below and update the code to test the property subscribersConfirmDelete
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersConfirmExport (base name: "subscribers.confirmExport")', function() {
      // uncomment below and update the code to test the property subscribersConfirmExport
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersDomainBlocklisted (base name: "subscribers.domainBlocklisted")', function() {
      // uncomment below and update the code to test the property subscribersDomainBlocklisted
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersDownloadData (base name: "subscribers.downloadData")', function() {
      // uncomment below and update the code to test the property subscribersDownloadData
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersEmail (base name: "subscribers.email")', function() {
      // uncomment below and update the code to test the property subscribersEmail
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersEmailExists (base name: "subscribers.emailExists")', function() {
      // uncomment below and update the code to test the property subscribersEmailExists
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersErrorBlocklisting (base name: "subscribers.errorBlocklisting")', function() {
      // uncomment below and update the code to test the property subscribersErrorBlocklisting
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersErrorNoIDs (base name: "subscribers.errorNoIDs")', function() {
      // uncomment below and update the code to test the property subscribersErrorNoIDs
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersErrorNoListsGiven (base name: "subscribers.errorNoListsGiven")', function() {
      // uncomment below and update the code to test the property subscribersErrorNoListsGiven
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersErrorPreparingQuery (base name: "subscribers.errorPreparingQuery")', function() {
      // uncomment below and update the code to test the property subscribersErrorPreparingQuery
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersErrorSendingOptin (base name: "subscribers.errorSendingOptin")', function() {
      // uncomment below and update the code to test the property subscribersErrorSendingOptin
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersExport (base name: "subscribers.export")', function() {
      // uncomment below and update the code to test the property subscribersExport
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersInvalidAction (base name: "subscribers.invalidAction")', function() {
      // uncomment below and update the code to test the property subscribersInvalidAction
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersInvalidEmail (base name: "subscribers.invalidEmail")', function() {
      // uncomment below and update the code to test the property subscribersInvalidEmail
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersInvalidJSON (base name: "subscribers.invalidJSON")', function() {
      // uncomment below and update the code to test the property subscribersInvalidJSON
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersInvalidName (base name: "subscribers.invalidName")', function() {
      // uncomment below and update the code to test the property subscribersInvalidName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersListChangeApplied (base name: "subscribers.listChangeApplied")', function() {
      // uncomment below and update the code to test the property subscribersListChangeApplied
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersLists (base name: "subscribers.lists")', function() {
      // uncomment below and update the code to test the property subscribersLists
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersListsHelp (base name: "subscribers.listsHelp")', function() {
      // uncomment below and update the code to test the property subscribersListsHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersListsPlaceholder (base name: "subscribers.listsPlaceholder")', function() {
      // uncomment below and update the code to test the property subscribersListsPlaceholder
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersManageLists (base name: "subscribers.manageLists")', function() {
      // uncomment below and update the code to test the property subscribersManageLists
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersMarkUnsubscribed (base name: "subscribers.markUnsubscribed")', function() {
      // uncomment below and update the code to test the property subscribersMarkUnsubscribed
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersNewSubscriber (base name: "subscribers.newSubscriber")', function() {
      // uncomment below and update the code to test the property subscribersNewSubscriber
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersNumSelected (base name: "subscribers.numSelected")', function() {
      // uncomment below and update the code to test the property subscribersNumSelected
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersOptinSubject (base name: "subscribers.optinSubject")', function() {
      // uncomment below and update the code to test the property subscribersOptinSubject
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersPreconfirm (base name: "subscribers.preconfirm")', function() {
      // uncomment below and update the code to test the property subscribersPreconfirm
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersPreconfirmHelp (base name: "subscribers.preconfirmHelp")', function() {
      // uncomment below and update the code to test the property subscribersPreconfirmHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersQuery (base name: "subscribers.query")', function() {
      // uncomment below and update the code to test the property subscribersQuery
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersQueryPlaceholder (base name: "subscribers.queryPlaceholder")', function() {
      // uncomment below and update the code to test the property subscribersQueryPlaceholder
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersReset (base name: "subscribers.reset")', function() {
      // uncomment below and update the code to test the property subscribersReset
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersSelectAll (base name: "subscribers.selectAll")', function() {
      // uncomment below and update the code to test the property subscribersSelectAll
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersSendOptinConfirm (base name: "subscribers.sendOptinConfirm")', function() {
      // uncomment below and update the code to test the property subscribersSendOptinConfirm
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersSentOptinConfirm (base name: "subscribers.sentOptinConfirm")', function() {
      // uncomment below and update the code to test the property subscribersSentOptinConfirm
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersStatusBlocklisted (base name: "subscribers.status.blocklisted")', function() {
      // uncomment below and update the code to test the property subscribersStatusBlocklisted
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersStatusConfirmed (base name: "subscribers.status.confirmed")', function() {
      // uncomment below and update the code to test the property subscribersStatusConfirmed
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersStatusEnabled (base name: "subscribers.status.enabled")', function() {
      // uncomment below and update the code to test the property subscribersStatusEnabled
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersStatusSubscribed (base name: "subscribers.status.subscribed")', function() {
      // uncomment below and update the code to test the property subscribersStatusSubscribed
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersStatusUnconfirmed (base name: "subscribers.status.unconfirmed")', function() {
      // uncomment below and update the code to test the property subscribersStatusUnconfirmed
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersStatusUnsubscribed (base name: "subscribers.status.unsubscribed")', function() {
      // uncomment below and update the code to test the property subscribersStatusUnsubscribed
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property subscribersSubscribersDeleted (base name: "subscribers.subscribersDeleted")', function() {
      // uncomment below and update the code to test the property subscribersSubscribersDeleted
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesCantDeleteDefault (base name: "templates.cantDeleteDefault")', function() {
      // uncomment below and update the code to test the property templatesCantDeleteDefault
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesDefault (base name: "templates.default")', function() {
      // uncomment below and update the code to test the property templatesDefault
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesDummyName (base name: "templates.dummyName")', function() {
      // uncomment below and update the code to test the property templatesDummyName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesDummySubject (base name: "templates.dummySubject")', function() {
      // uncomment below and update the code to test the property templatesDummySubject
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesErrorCompiling (base name: "templates.errorCompiling")', function() {
      // uncomment below and update the code to test the property templatesErrorCompiling
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesErrorRendering (base name: "templates.errorRendering")', function() {
      // uncomment below and update the code to test the property templatesErrorRendering
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesFieldInvalidName (base name: "templates.fieldInvalidName")', function() {
      // uncomment below and update the code to test the property templatesFieldInvalidName
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesMakeDefault (base name: "templates.makeDefault")', function() {
      // uncomment below and update the code to test the property templatesMakeDefault
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesNewTemplate (base name: "templates.newTemplate")', function() {
      // uncomment below and update the code to test the property templatesNewTemplate
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesPlaceholderHelp (base name: "templates.placeholderHelp")', function() {
      // uncomment below and update the code to test the property templatesPlaceholderHelp
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesPreview (base name: "templates.preview")', function() {
      // uncomment below and update the code to test the property templatesPreview
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesRawHTML (base name: "templates.rawHTML")', function() {
      // uncomment below and update the code to test the property templatesRawHTML
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property templatesSubject (base name: "templates.subject")', function() {
      // uncomment below and update the code to test the property templatesSubject
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property usersLogin (base name: "users.login")', function() {
      // uncomment below and update the code to test the property usersLogin
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

    it('should have the property usersLogout (base name: "users.logout")', function() {
      // uncomment below and update the code to test the property usersLogout
      //var instance = new Listmonk.LanguagePackData();
      //expect(instance).to.be();
    });

  });

}));
