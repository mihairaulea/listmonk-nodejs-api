/**
 * Listmonk
 * The API collection for listmonk
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Listmonk);
  }
}(this, function(expect, Listmonk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Listmonk.SubscribersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SubscribersApi', function() {
    describe('subscribersGet', function() {
      it('should call subscribersGet successfully', function(done) {
        //uncomment below and update the code to test subscribersGet
        //instance.subscribersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribersIdBlocklistPut', function() {
      it('should call subscribersIdBlocklistPut successfully', function(done) {
        //uncomment below and update the code to test subscribersIdBlocklistPut
        //instance.subscribersIdBlocklistPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribersIdBouncesDelete', function() {
      it('should call subscribersIdBouncesDelete successfully', function(done) {
        //uncomment below and update the code to test subscribersIdBouncesDelete
        //instance.subscribersIdBouncesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribersIdBouncesGet', function() {
      it('should call subscribersIdBouncesGet successfully', function(done) {
        //uncomment below and update the code to test subscribersIdBouncesGet
        //instance.subscribersIdBouncesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribersIdDelete', function() {
      it('should call subscribersIdDelete successfully', function(done) {
        //uncomment below and update the code to test subscribersIdDelete
        //instance.subscribersIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribersIdExportGet', function() {
      it('should call subscribersIdExportGet successfully', function(done) {
        //uncomment below and update the code to test subscribersIdExportGet
        //instance.subscribersIdExportGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribersIdOptinPost', function() {
      it('should call subscribersIdOptinPost successfully', function(done) {
        //uncomment below and update the code to test subscribersIdOptinPost
        //instance.subscribersIdOptinPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribersListsPut', function() {
      it('should call subscribersListsPut successfully', function(done) {
        //uncomment below and update the code to test subscribersListsPut
        //instance.subscribersListsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribersPost', function() {
      it('should call subscribersPost successfully', function(done) {
        //uncomment below and update the code to test subscribersPost
        //instance.subscribersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribersQueryBlocklistPut', function() {
      it('should call subscribersQueryBlocklistPut successfully', function(done) {
        //uncomment below and update the code to test subscribersQueryBlocklistPut
        //instance.subscribersQueryBlocklistPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribersQueryDeletePost', function() {
      it('should call subscribersQueryDeletePost successfully', function(done) {
        //uncomment below and update the code to test subscribersQueryDeletePost
        //instance.subscribersQueryDeletePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribersQueryListsPut', function() {
      it('should call subscribersQueryListsPut successfully', function(done) {
        //uncomment below and update the code to test subscribersQueryListsPut
        //instance.subscribersQueryListsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribersSubscriberIdGet', function() {
      it('should call subscribersSubscriberIdGet successfully', function(done) {
        //uncomment below and update the code to test subscribersSubscriberIdGet
        //instance.subscribersSubscriberIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
