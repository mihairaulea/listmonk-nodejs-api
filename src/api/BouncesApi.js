/**
 * Listmonk
 * The API collection for listmonk
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Bounce from '../model/Bounce';
import BouncesGet200Response from '../model/BouncesGet200Response';
import HealthGet200Response from '../model/HealthGet200Response';

/**
* Bounces service.
* @module api/BouncesApi
* @version 1.0.0
*/
export default class BouncesApi {

    /**
    * Constructs a new BouncesApi. 
    * @alias module:api/BouncesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the bouncesDelete operation.
     * @callback module:api/BouncesApi~bouncesDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HealthGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * handles retrieval of bounce records.
     * @param {module:api/BouncesApi~bouncesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HealthGet200Response}
     */
    bouncesDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = HealthGet200Response;
      return this.apiClient.callApi(
        '/bounces', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bouncesGet operation.
     * @callback module:api/BouncesApi~bouncesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BouncesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * handles retrieval of bounce records.
     * @param {module:api/BouncesApi~bouncesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BouncesGet200Response}
     */
    bouncesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BouncesGet200Response;
      return this.apiClient.callApi(
        '/bounces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bouncesIdDelete operation.
     * @callback module:api/BouncesApi~bouncesIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HealthGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * handles bounce deletion, either a single one (ID in the URI), or a list.
     * @param {module:api/BouncesApi~bouncesIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HealthGet200Response}
     */
    bouncesIdDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = HealthGet200Response;
      return this.apiClient.callApi(
        '/bounces/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the bouncesIdGet operation.
     * @callback module:api/BouncesApi~bouncesIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Bounce} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * handles retrieval of bounce record by id
     * @param {module:api/BouncesApi~bouncesIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Bounce}
     */
    bouncesIdGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Bounce;
      return this.apiClient.callApi(
        '/bounces/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
