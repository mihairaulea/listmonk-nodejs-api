/**
 * Listmonk
 * The API collection for listmonk
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BounceDataResultsInnerCampaign from './BounceDataResultsInnerCampaign';

/**
 * The BounceDataResultsInner model module.
 * @module model/BounceDataResultsInner
 * @version 1.0.0
 */
class BounceDataResultsInner {
    /**
     * Constructs a new <code>BounceDataResultsInner</code>.
     * @alias module:model/BounceDataResultsInner
     */
    constructor() { 
        
        BounceDataResultsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BounceDataResultsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BounceDataResultsInner} obj Optional instance to populate.
     * @return {module:model/BounceDataResultsInner} The populated <code>BounceDataResultsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BounceDataResultsInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = ApiClient.convertToType(data['meta'], Object);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('subscriber_uuid')) {
                obj['subscriber_uuid'] = ApiClient.convertToType(data['subscriber_uuid'], 'String');
            }
            if (data.hasOwnProperty('subscriber_id')) {
                obj['subscriber_id'] = ApiClient.convertToType(data['subscriber_id'], 'Number');
            }
            if (data.hasOwnProperty('campaign')) {
                obj['campaign'] = BounceDataResultsInnerCampaign.constructFromObject(data['campaign']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BounceDataResultsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BounceDataResultsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['subscriber_uuid'] && !(typeof data['subscriber_uuid'] === 'string' || data['subscriber_uuid'] instanceof String)) {
            throw new Error("Expected the field `subscriber_uuid` to be a primitive type in the JSON string but got " + data['subscriber_uuid']);
        }
        // validate the optional field `campaign`
        if (data['campaign']) { // data not null
          BounceDataResultsInnerCampaign.validateJSON(data['campaign']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
BounceDataResultsInner.prototype['id'] = undefined;

/**
 * @member {String} type
 */
BounceDataResultsInner.prototype['type'] = undefined;

/**
 * @member {String} source
 */
BounceDataResultsInner.prototype['source'] = undefined;

/**
 * @member {Object} meta
 */
BounceDataResultsInner.prototype['meta'] = undefined;

/**
 * @member {String} created_at
 */
BounceDataResultsInner.prototype['created_at'] = undefined;

/**
 * @member {String} email
 */
BounceDataResultsInner.prototype['email'] = undefined;

/**
 * @member {String} subscriber_uuid
 */
BounceDataResultsInner.prototype['subscriber_uuid'] = undefined;

/**
 * @member {Number} subscriber_id
 */
BounceDataResultsInner.prototype['subscriber_id'] = undefined;

/**
 * @member {module:model/BounceDataResultsInnerCampaign} campaign
 */
BounceDataResultsInner.prototype['campaign'] = undefined;






export default BounceDataResultsInner;

