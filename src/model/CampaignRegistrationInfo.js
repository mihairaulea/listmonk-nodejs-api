/**
 * Listmonk
 * The API collection for listmonk
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CampaignRegistrationInfo model module.
 * @module model/CampaignRegistrationInfo
 * @version 1.0.0
 */
class CampaignRegistrationInfo {
    /**
     * Constructs a new <code>CampaignRegistrationInfo</code>.
     * @alias module:model/CampaignRegistrationInfo
     */
    constructor() { 
        
        CampaignRegistrationInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CampaignRegistrationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CampaignRegistrationInfo} obj Optional instance to populate.
     * @return {module:model/CampaignRegistrationInfo} The populated <code>CampaignRegistrationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CampaignRegistrationInfo();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('lists')) {
                obj['lists'] = ApiClient.convertToType(data['lists'], ['Number']);
            }
            if (data.hasOwnProperty('from_email')) {
                obj['from_email'] = ApiClient.convertToType(data['from_email'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('content-type')) {
                obj['content-type'] = ApiClient.convertToType(data['content-type'], 'String');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('altbody')) {
                obj['altbody'] = ApiClient.convertToType(data['altbody'], 'String');
            }
            if (data.hasOwnProperty('send_at')) {
                obj['send_at'] = ApiClient.convertToType(data['send_at'], 'String');
            }
            if (data.hasOwnProperty('messenger')) {
                obj['messenger'] = ApiClient.convertToType(data['messenger'], 'String');
            }
            if (data.hasOwnProperty('template_id')) {
                obj['template_id'] = ApiClient.convertToType(data['template_id'], 'Number');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CampaignRegistrationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CampaignRegistrationInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['lists'])) {
            throw new Error("Expected the field `lists` to be an array in the JSON data but got " + data['lists']);
        }
        // ensure the json data is a string
        if (data['from_email'] && !(typeof data['from_email'] === 'string' || data['from_email'] instanceof String)) {
            throw new Error("Expected the field `from_email` to be a primitive type in the JSON string but got " + data['from_email']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['content-type'] && !(typeof data['content-type'] === 'string' || data['content-type'] instanceof String)) {
            throw new Error("Expected the field `content-type` to be a primitive type in the JSON string but got " + data['content-type']);
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['altbody'] && !(typeof data['altbody'] === 'string' || data['altbody'] instanceof String)) {
            throw new Error("Expected the field `altbody` to be a primitive type in the JSON string but got " + data['altbody']);
        }
        // ensure the json data is a string
        if (data['send_at'] && !(typeof data['send_at'] === 'string' || data['send_at'] instanceof String)) {
            throw new Error("Expected the field `send_at` to be a primitive type in the JSON string but got " + data['send_at']);
        }
        // ensure the json data is a string
        if (data['messenger'] && !(typeof data['messenger'] === 'string' || data['messenger'] instanceof String)) {
            throw new Error("Expected the field `messenger` to be a primitive type in the JSON string but got " + data['messenger']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
CampaignRegistrationInfo.prototype['name'] = undefined;

/**
 * @member {String} subject
 */
CampaignRegistrationInfo.prototype['subject'] = undefined;

/**
 * @member {Array.<Number>} lists
 */
CampaignRegistrationInfo.prototype['lists'] = undefined;

/**
 * @member {String} from_email
 */
CampaignRegistrationInfo.prototype['from_email'] = undefined;

/**
 * @member {String} type
 */
CampaignRegistrationInfo.prototype['type'] = undefined;

/**
 * @member {String} content-type
 */
CampaignRegistrationInfo.prototype['content-type'] = undefined;

/**
 * @member {String} body
 */
CampaignRegistrationInfo.prototype['body'] = undefined;

/**
 * @member {String} altbody
 */
CampaignRegistrationInfo.prototype['altbody'] = undefined;

/**
 * @member {String} send_at
 */
CampaignRegistrationInfo.prototype['send_at'] = undefined;

/**
 * @member {String} messenger
 */
CampaignRegistrationInfo.prototype['messenger'] = undefined;

/**
 * @member {Number} template_id
 */
CampaignRegistrationInfo.prototype['template_id'] = undefined;

/**
 * @member {Array.<String>} tags
 */
CampaignRegistrationInfo.prototype['tags'] = undefined;






export default CampaignRegistrationInfo;

