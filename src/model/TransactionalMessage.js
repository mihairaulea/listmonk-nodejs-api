/**
 * Listmonk
 * The API collection for listmonk
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransactionalMessage model module.
 * @module model/TransactionalMessage
 * @version 1.0.0
 */
class TransactionalMessage {
    /**
     * Constructs a new <code>TransactionalMessage</code>.
     * @alias module:model/TransactionalMessage
     */
    constructor() { 
        
        TransactionalMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransactionalMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionalMessage} obj Optional instance to populate.
     * @return {module:model/TransactionalMessage} The populated <code>TransactionalMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionalMessage();

            if (data.hasOwnProperty('subscriber_email')) {
                obj['subscriber_email'] = ApiClient.convertToType(data['subscriber_email'], 'String');
            }
            if (data.hasOwnProperty('subscriber_id')) {
                obj['subscriber_id'] = ApiClient.convertToType(data['subscriber_id'], 'Number');
            }
            if (data.hasOwnProperty('template_id')) {
                obj['template_id'] = ApiClient.convertToType(data['template_id'], 'Number');
            }
            if (data.hasOwnProperty('from_email')) {
                obj['from_email'] = ApiClient.convertToType(data['from_email'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], Object);
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], [Object]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionalMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionalMessage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['subscriber_email'] && !(typeof data['subscriber_email'] === 'string' || data['subscriber_email'] instanceof String)) {
            throw new Error("Expected the field `subscriber_email` to be a primitive type in the JSON string but got " + data['subscriber_email']);
        }
        // ensure the json data is a string
        if (data['from_email'] && !(typeof data['from_email'] === 'string' || data['from_email'] instanceof String)) {
            throw new Error("Expected the field `from_email` to be a primitive type in the JSON string but got " + data['from_email']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['headers'])) {
            throw new Error("Expected the field `headers` to be an array in the JSON data but got " + data['headers']);
        }

        return true;
    }


}



/**
 * @member {String} subscriber_email
 */
TransactionalMessage.prototype['subscriber_email'] = undefined;

/**
 * @member {Number} subscriber_id
 */
TransactionalMessage.prototype['subscriber_id'] = undefined;

/**
 * @member {Number} template_id
 */
TransactionalMessage.prototype['template_id'] = undefined;

/**
 * @member {String} from_email
 */
TransactionalMessage.prototype['from_email'] = undefined;

/**
 * @member {Object} data
 */
TransactionalMessage.prototype['data'] = undefined;

/**
 * @member {Array.<Object>} headers
 */
TransactionalMessage.prototype['headers'] = undefined;






export default TransactionalMessage;

