/**
 * Listmonk
 * The API collection for listmonk
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MailBoxBounces from './MailBoxBounces';
import SMTPSettings from './SMTPSettings';

/**
 * The SettingsData model module.
 * @module model/SettingsData
 * @version 1.0.0
 */
class SettingsData {
    /**
     * Constructs a new <code>SettingsData</code>.
     * @alias module:model/SettingsData
     */
    constructor() { 
        
        SettingsData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SettingsData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SettingsData} obj Optional instance to populate.
     * @return {module:model/SettingsData} The populated <code>SettingsData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SettingsData();

            if (data.hasOwnProperty('app.site_name')) {
                obj['app.site_name'] = ApiClient.convertToType(data['app.site_name'], 'String');
            }
            if (data.hasOwnProperty('app.root_url')) {
                obj['app.root_url'] = ApiClient.convertToType(data['app.root_url'], 'String');
            }
            if (data.hasOwnProperty('app.logo_url')) {
                obj['app.logo_url'] = ApiClient.convertToType(data['app.logo_url'], 'String');
            }
            if (data.hasOwnProperty('app.favicon_url')) {
                obj['app.favicon_url'] = ApiClient.convertToType(data['app.favicon_url'], 'String');
            }
            if (data.hasOwnProperty('app.from_email')) {
                obj['app.from_email'] = ApiClient.convertToType(data['app.from_email'], 'String');
            }
            if (data.hasOwnProperty('app.notify_emails')) {
                obj['app.notify_emails'] = ApiClient.convertToType(data['app.notify_emails'], ['String']);
            }
            if (data.hasOwnProperty('app.enable_public_subscription_page')) {
                obj['app.enable_public_subscription_page'] = ApiClient.convertToType(data['app.enable_public_subscription_page'], 'Boolean');
            }
            if (data.hasOwnProperty('app.enable_public_archive')) {
                obj['app.enable_public_archive'] = ApiClient.convertToType(data['app.enable_public_archive'], 'Boolean');
            }
            if (data.hasOwnProperty('app.send_optin_confirmation')) {
                obj['app.send_optin_confirmation'] = ApiClient.convertToType(data['app.send_optin_confirmation'], 'Boolean');
            }
            if (data.hasOwnProperty('app.check_updates')) {
                obj['app.check_updates'] = ApiClient.convertToType(data['app.check_updates'], 'Boolean');
            }
            if (data.hasOwnProperty('app.lang')) {
                obj['app.lang'] = ApiClient.convertToType(data['app.lang'], 'String');
            }
            if (data.hasOwnProperty('app.batch_size')) {
                obj['app.batch_size'] = ApiClient.convertToType(data['app.batch_size'], 'Number');
            }
            if (data.hasOwnProperty('app.concurrency')) {
                obj['app.concurrency'] = ApiClient.convertToType(data['app.concurrency'], 'Number');
            }
            if (data.hasOwnProperty('app.max_send_errors')) {
                obj['app.max_send_errors'] = ApiClient.convertToType(data['app.max_send_errors'], 'Number');
            }
            if (data.hasOwnProperty('app.message_rate')) {
                obj['app.message_rate'] = ApiClient.convertToType(data['app.message_rate'], 'Number');
            }
            if (data.hasOwnProperty('app.message_sliding_window')) {
                obj['app.message_sliding_window'] = ApiClient.convertToType(data['app.message_sliding_window'], 'Boolean');
            }
            if (data.hasOwnProperty('app.message_sliding_window_duration')) {
                obj['app.message_sliding_window_duration'] = ApiClient.convertToType(data['app.message_sliding_window_duration'], 'String');
            }
            if (data.hasOwnProperty('app.message_sliding_window_rate')) {
                obj['app.message_sliding_window_rate'] = ApiClient.convertToType(data['app.message_sliding_window_rate'], 'Number');
            }
            if (data.hasOwnProperty('privacy.individual_tracking')) {
                obj['privacy.individual_tracking'] = ApiClient.convertToType(data['privacy.individual_tracking'], 'Boolean');
            }
            if (data.hasOwnProperty('privacy.unsubscribe_header')) {
                obj['privacy.unsubscribe_header'] = ApiClient.convertToType(data['privacy.unsubscribe_header'], 'Boolean');
            }
            if (data.hasOwnProperty('privacy.allow_blocklist')) {
                obj['privacy.allow_blocklist'] = ApiClient.convertToType(data['privacy.allow_blocklist'], 'Boolean');
            }
            if (data.hasOwnProperty('privacy.allow_preferences')) {
                obj['privacy.allow_preferences'] = ApiClient.convertToType(data['privacy.allow_preferences'], 'Boolean');
            }
            if (data.hasOwnProperty('privacy.allow_export')) {
                obj['privacy.allow_export'] = ApiClient.convertToType(data['privacy.allow_export'], 'Boolean');
            }
            if (data.hasOwnProperty('privacy.allow_wipe')) {
                obj['privacy.allow_wipe'] = ApiClient.convertToType(data['privacy.allow_wipe'], 'Boolean');
            }
            if (data.hasOwnProperty('privacy.exportable')) {
                obj['privacy.exportable'] = ApiClient.convertToType(data['privacy.exportable'], ['String']);
            }
            if (data.hasOwnProperty('privacy.domain_blocklist')) {
                obj['privacy.domain_blocklist'] = ApiClient.convertToType(data['privacy.domain_blocklist'], [Object]);
            }
            if (data.hasOwnProperty('upload.provider')) {
                obj['upload.provider'] = ApiClient.convertToType(data['upload.provider'], 'String');
            }
            if (data.hasOwnProperty('upload.filesystem.upload_path')) {
                obj['upload.filesystem.upload_path'] = ApiClient.convertToType(data['upload.filesystem.upload_path'], 'String');
            }
            if (data.hasOwnProperty('upload.filesystem.upload_uri')) {
                obj['upload.filesystem.upload_uri'] = ApiClient.convertToType(data['upload.filesystem.upload_uri'], 'String');
            }
            if (data.hasOwnProperty('upload.s3.url')) {
                obj['upload.s3.url'] = ApiClient.convertToType(data['upload.s3.url'], 'String');
            }
            if (data.hasOwnProperty('upload.s3.public_url')) {
                obj['upload.s3.public_url'] = ApiClient.convertToType(data['upload.s3.public_url'], 'String');
            }
            if (data.hasOwnProperty('upload.s3.aws_access_key_id')) {
                obj['upload.s3.aws_access_key_id'] = ApiClient.convertToType(data['upload.s3.aws_access_key_id'], 'String');
            }
            if (data.hasOwnProperty('upload.s3.aws_default_region')) {
                obj['upload.s3.aws_default_region'] = ApiClient.convertToType(data['upload.s3.aws_default_region'], 'String');
            }
            if (data.hasOwnProperty('upload.s3.bucket')) {
                obj['upload.s3.bucket'] = ApiClient.convertToType(data['upload.s3.bucket'], 'String');
            }
            if (data.hasOwnProperty('upload.s3.bucket_domain')) {
                obj['upload.s3.bucket_domain'] = ApiClient.convertToType(data['upload.s3.bucket_domain'], 'String');
            }
            if (data.hasOwnProperty('upload.s3.bucket_path')) {
                obj['upload.s3.bucket_path'] = ApiClient.convertToType(data['upload.s3.bucket_path'], 'String');
            }
            if (data.hasOwnProperty('upload.s3.bucket_type')) {
                obj['upload.s3.bucket_type'] = ApiClient.convertToType(data['upload.s3.bucket_type'], 'String');
            }
            if (data.hasOwnProperty('upload.s3.expiry')) {
                obj['upload.s3.expiry'] = ApiClient.convertToType(data['upload.s3.expiry'], 'String');
            }
            if (data.hasOwnProperty('smtp')) {
                obj['smtp'] = ApiClient.convertToType(data['smtp'], [SMTPSettings]);
            }
            if (data.hasOwnProperty('messengers')) {
                obj['messengers'] = ApiClient.convertToType(data['messengers'], [Object]);
            }
            if (data.hasOwnProperty('bounce.enabled')) {
                obj['bounce.enabled'] = ApiClient.convertToType(data['bounce.enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('bounce.webhooks_enabled')) {
                obj['bounce.webhooks_enabled'] = ApiClient.convertToType(data['bounce.webhooks_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('bounce.count')) {
                obj['bounce.count'] = ApiClient.convertToType(data['bounce.count'], 'Number');
            }
            if (data.hasOwnProperty('bounce.action')) {
                obj['bounce.action'] = ApiClient.convertToType(data['bounce.action'], 'String');
            }
            if (data.hasOwnProperty('bounce.ses_enabled')) {
                obj['bounce.ses_enabled'] = ApiClient.convertToType(data['bounce.ses_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('bounce.sendgrid_enabled')) {
                obj['bounce.sendgrid_enabled'] = ApiClient.convertToType(data['bounce.sendgrid_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('bounce.sendgrid_key')) {
                obj['bounce.sendgrid_key'] = ApiClient.convertToType(data['bounce.sendgrid_key'], 'String');
            }
            if (data.hasOwnProperty('bounce.mailboxes')) {
                obj['bounce.mailboxes'] = ApiClient.convertToType(data['bounce.mailboxes'], [MailBoxBounces]);
            }
            if (data.hasOwnProperty('appearance.admin.custom_css')) {
                obj['appearance.admin.custom_css'] = ApiClient.convertToType(data['appearance.admin.custom_css'], 'String');
            }
            if (data.hasOwnProperty('appearance.admin.custom_js')) {
                obj['appearance.admin.custom_js'] = ApiClient.convertToType(data['appearance.admin.custom_js'], 'String');
            }
            if (data.hasOwnProperty('appearance.public.custom_css')) {
                obj['appearance.public.custom_css'] = ApiClient.convertToType(data['appearance.public.custom_css'], 'String');
            }
            if (data.hasOwnProperty('appearance.public.custom_js')) {
                obj['appearance.public.custom_js'] = ApiClient.convertToType(data['appearance.public.custom_js'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SettingsData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SettingsData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['app.site_name'] && !(typeof data['app.site_name'] === 'string' || data['app.site_name'] instanceof String)) {
            throw new Error("Expected the field `app.site_name` to be a primitive type in the JSON string but got " + data['app.site_name']);
        }
        // ensure the json data is a string
        if (data['app.root_url'] && !(typeof data['app.root_url'] === 'string' || data['app.root_url'] instanceof String)) {
            throw new Error("Expected the field `app.root_url` to be a primitive type in the JSON string but got " + data['app.root_url']);
        }
        // ensure the json data is a string
        if (data['app.logo_url'] && !(typeof data['app.logo_url'] === 'string' || data['app.logo_url'] instanceof String)) {
            throw new Error("Expected the field `app.logo_url` to be a primitive type in the JSON string but got " + data['app.logo_url']);
        }
        // ensure the json data is a string
        if (data['app.favicon_url'] && !(typeof data['app.favicon_url'] === 'string' || data['app.favicon_url'] instanceof String)) {
            throw new Error("Expected the field `app.favicon_url` to be a primitive type in the JSON string but got " + data['app.favicon_url']);
        }
        // ensure the json data is a string
        if (data['app.from_email'] && !(typeof data['app.from_email'] === 'string' || data['app.from_email'] instanceof String)) {
            throw new Error("Expected the field `app.from_email` to be a primitive type in the JSON string but got " + data['app.from_email']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['app.notify_emails'])) {
            throw new Error("Expected the field `app.notify_emails` to be an array in the JSON data but got " + data['app.notify_emails']);
        }
        // ensure the json data is a string
        if (data['app.lang'] && !(typeof data['app.lang'] === 'string' || data['app.lang'] instanceof String)) {
            throw new Error("Expected the field `app.lang` to be a primitive type in the JSON string but got " + data['app.lang']);
        }
        // ensure the json data is a string
        if (data['app.message_sliding_window_duration'] && !(typeof data['app.message_sliding_window_duration'] === 'string' || data['app.message_sliding_window_duration'] instanceof String)) {
            throw new Error("Expected the field `app.message_sliding_window_duration` to be a primitive type in the JSON string but got " + data['app.message_sliding_window_duration']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['privacy.exportable'])) {
            throw new Error("Expected the field `privacy.exportable` to be an array in the JSON data but got " + data['privacy.exportable']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['privacy.domain_blocklist'])) {
            throw new Error("Expected the field `privacy.domain_blocklist` to be an array in the JSON data but got " + data['privacy.domain_blocklist']);
        }
        // ensure the json data is a string
        if (data['upload.provider'] && !(typeof data['upload.provider'] === 'string' || data['upload.provider'] instanceof String)) {
            throw new Error("Expected the field `upload.provider` to be a primitive type in the JSON string but got " + data['upload.provider']);
        }
        // ensure the json data is a string
        if (data['upload.filesystem.upload_path'] && !(typeof data['upload.filesystem.upload_path'] === 'string' || data['upload.filesystem.upload_path'] instanceof String)) {
            throw new Error("Expected the field `upload.filesystem.upload_path` to be a primitive type in the JSON string but got " + data['upload.filesystem.upload_path']);
        }
        // ensure the json data is a string
        if (data['upload.filesystem.upload_uri'] && !(typeof data['upload.filesystem.upload_uri'] === 'string' || data['upload.filesystem.upload_uri'] instanceof String)) {
            throw new Error("Expected the field `upload.filesystem.upload_uri` to be a primitive type in the JSON string but got " + data['upload.filesystem.upload_uri']);
        }
        // ensure the json data is a string
        if (data['upload.s3.url'] && !(typeof data['upload.s3.url'] === 'string' || data['upload.s3.url'] instanceof String)) {
            throw new Error("Expected the field `upload.s3.url` to be a primitive type in the JSON string but got " + data['upload.s3.url']);
        }
        // ensure the json data is a string
        if (data['upload.s3.public_url'] && !(typeof data['upload.s3.public_url'] === 'string' || data['upload.s3.public_url'] instanceof String)) {
            throw new Error("Expected the field `upload.s3.public_url` to be a primitive type in the JSON string but got " + data['upload.s3.public_url']);
        }
        // ensure the json data is a string
        if (data['upload.s3.aws_access_key_id'] && !(typeof data['upload.s3.aws_access_key_id'] === 'string' || data['upload.s3.aws_access_key_id'] instanceof String)) {
            throw new Error("Expected the field `upload.s3.aws_access_key_id` to be a primitive type in the JSON string but got " + data['upload.s3.aws_access_key_id']);
        }
        // ensure the json data is a string
        if (data['upload.s3.aws_default_region'] && !(typeof data['upload.s3.aws_default_region'] === 'string' || data['upload.s3.aws_default_region'] instanceof String)) {
            throw new Error("Expected the field `upload.s3.aws_default_region` to be a primitive type in the JSON string but got " + data['upload.s3.aws_default_region']);
        }
        // ensure the json data is a string
        if (data['upload.s3.bucket'] && !(typeof data['upload.s3.bucket'] === 'string' || data['upload.s3.bucket'] instanceof String)) {
            throw new Error("Expected the field `upload.s3.bucket` to be a primitive type in the JSON string but got " + data['upload.s3.bucket']);
        }
        // ensure the json data is a string
        if (data['upload.s3.bucket_domain'] && !(typeof data['upload.s3.bucket_domain'] === 'string' || data['upload.s3.bucket_domain'] instanceof String)) {
            throw new Error("Expected the field `upload.s3.bucket_domain` to be a primitive type in the JSON string but got " + data['upload.s3.bucket_domain']);
        }
        // ensure the json data is a string
        if (data['upload.s3.bucket_path'] && !(typeof data['upload.s3.bucket_path'] === 'string' || data['upload.s3.bucket_path'] instanceof String)) {
            throw new Error("Expected the field `upload.s3.bucket_path` to be a primitive type in the JSON string but got " + data['upload.s3.bucket_path']);
        }
        // ensure the json data is a string
        if (data['upload.s3.bucket_type'] && !(typeof data['upload.s3.bucket_type'] === 'string' || data['upload.s3.bucket_type'] instanceof String)) {
            throw new Error("Expected the field `upload.s3.bucket_type` to be a primitive type in the JSON string but got " + data['upload.s3.bucket_type']);
        }
        // ensure the json data is a string
        if (data['upload.s3.expiry'] && !(typeof data['upload.s3.expiry'] === 'string' || data['upload.s3.expiry'] instanceof String)) {
            throw new Error("Expected the field `upload.s3.expiry` to be a primitive type in the JSON string but got " + data['upload.s3.expiry']);
        }
        if (data['smtp']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['smtp'])) {
                throw new Error("Expected the field `smtp` to be an array in the JSON data but got " + data['smtp']);
            }
            // validate the optional field `smtp` (array)
            for (const item of data['smtp']) {
                SMTPSettings.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['messengers'])) {
            throw new Error("Expected the field `messengers` to be an array in the JSON data but got " + data['messengers']);
        }
        // ensure the json data is a string
        if (data['bounce.action'] && !(typeof data['bounce.action'] === 'string' || data['bounce.action'] instanceof String)) {
            throw new Error("Expected the field `bounce.action` to be a primitive type in the JSON string but got " + data['bounce.action']);
        }
        // ensure the json data is a string
        if (data['bounce.sendgrid_key'] && !(typeof data['bounce.sendgrid_key'] === 'string' || data['bounce.sendgrid_key'] instanceof String)) {
            throw new Error("Expected the field `bounce.sendgrid_key` to be a primitive type in the JSON string but got " + data['bounce.sendgrid_key']);
        }
        if (data['bounce.mailboxes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bounce.mailboxes'])) {
                throw new Error("Expected the field `bounce.mailboxes` to be an array in the JSON data but got " + data['bounce.mailboxes']);
            }
            // validate the optional field `bounce.mailboxes` (array)
            for (const item of data['bounce.mailboxes']) {
                MailBoxBounces.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['appearance.admin.custom_css'] && !(typeof data['appearance.admin.custom_css'] === 'string' || data['appearance.admin.custom_css'] instanceof String)) {
            throw new Error("Expected the field `appearance.admin.custom_css` to be a primitive type in the JSON string but got " + data['appearance.admin.custom_css']);
        }
        // ensure the json data is a string
        if (data['appearance.admin.custom_js'] && !(typeof data['appearance.admin.custom_js'] === 'string' || data['appearance.admin.custom_js'] instanceof String)) {
            throw new Error("Expected the field `appearance.admin.custom_js` to be a primitive type in the JSON string but got " + data['appearance.admin.custom_js']);
        }
        // ensure the json data is a string
        if (data['appearance.public.custom_css'] && !(typeof data['appearance.public.custom_css'] === 'string' || data['appearance.public.custom_css'] instanceof String)) {
            throw new Error("Expected the field `appearance.public.custom_css` to be a primitive type in the JSON string but got " + data['appearance.public.custom_css']);
        }
        // ensure the json data is a string
        if (data['appearance.public.custom_js'] && !(typeof data['appearance.public.custom_js'] === 'string' || data['appearance.public.custom_js'] instanceof String)) {
            throw new Error("Expected the field `appearance.public.custom_js` to be a primitive type in the JSON string but got " + data['appearance.public.custom_js']);
        }

        return true;
    }


}



/**
 * @member {String} app.site_name
 */
SettingsData.prototype['app.site_name'] = undefined;

/**
 * @member {String} app.root_url
 */
SettingsData.prototype['app.root_url'] = undefined;

/**
 * @member {String} app.logo_url
 */
SettingsData.prototype['app.logo_url'] = undefined;

/**
 * @member {String} app.favicon_url
 */
SettingsData.prototype['app.favicon_url'] = undefined;

/**
 * @member {String} app.from_email
 */
SettingsData.prototype['app.from_email'] = undefined;

/**
 * @member {Array.<String>} app.notify_emails
 */
SettingsData.prototype['app.notify_emails'] = undefined;

/**
 * @member {Boolean} app.enable_public_subscription_page
 */
SettingsData.prototype['app.enable_public_subscription_page'] = undefined;

/**
 * @member {Boolean} app.enable_public_archive
 */
SettingsData.prototype['app.enable_public_archive'] = undefined;

/**
 * @member {Boolean} app.send_optin_confirmation
 */
SettingsData.prototype['app.send_optin_confirmation'] = undefined;

/**
 * @member {Boolean} app.check_updates
 */
SettingsData.prototype['app.check_updates'] = undefined;

/**
 * @member {String} app.lang
 */
SettingsData.prototype['app.lang'] = undefined;

/**
 * @member {Number} app.batch_size
 */
SettingsData.prototype['app.batch_size'] = undefined;

/**
 * @member {Number} app.concurrency
 */
SettingsData.prototype['app.concurrency'] = undefined;

/**
 * @member {Number} app.max_send_errors
 */
SettingsData.prototype['app.max_send_errors'] = undefined;

/**
 * @member {Number} app.message_rate
 */
SettingsData.prototype['app.message_rate'] = undefined;

/**
 * @member {Boolean} app.message_sliding_window
 */
SettingsData.prototype['app.message_sliding_window'] = undefined;

/**
 * @member {String} app.message_sliding_window_duration
 */
SettingsData.prototype['app.message_sliding_window_duration'] = undefined;

/**
 * @member {Number} app.message_sliding_window_rate
 */
SettingsData.prototype['app.message_sliding_window_rate'] = undefined;

/**
 * @member {Boolean} privacy.individual_tracking
 */
SettingsData.prototype['privacy.individual_tracking'] = undefined;

/**
 * @member {Boolean} privacy.unsubscribe_header
 */
SettingsData.prototype['privacy.unsubscribe_header'] = undefined;

/**
 * @member {Boolean} privacy.allow_blocklist
 */
SettingsData.prototype['privacy.allow_blocklist'] = undefined;

/**
 * @member {Boolean} privacy.allow_preferences
 */
SettingsData.prototype['privacy.allow_preferences'] = undefined;

/**
 * @member {Boolean} privacy.allow_export
 */
SettingsData.prototype['privacy.allow_export'] = undefined;

/**
 * @member {Boolean} privacy.allow_wipe
 */
SettingsData.prototype['privacy.allow_wipe'] = undefined;

/**
 * @member {Array.<String>} privacy.exportable
 */
SettingsData.prototype['privacy.exportable'] = undefined;

/**
 * @member {Array.<Object>} privacy.domain_blocklist
 */
SettingsData.prototype['privacy.domain_blocklist'] = undefined;

/**
 * @member {String} upload.provider
 */
SettingsData.prototype['upload.provider'] = undefined;

/**
 * @member {String} upload.filesystem.upload_path
 */
SettingsData.prototype['upload.filesystem.upload_path'] = undefined;

/**
 * @member {String} upload.filesystem.upload_uri
 */
SettingsData.prototype['upload.filesystem.upload_uri'] = undefined;

/**
 * @member {String} upload.s3.url
 */
SettingsData.prototype['upload.s3.url'] = undefined;

/**
 * @member {String} upload.s3.public_url
 */
SettingsData.prototype['upload.s3.public_url'] = undefined;

/**
 * @member {String} upload.s3.aws_access_key_id
 */
SettingsData.prototype['upload.s3.aws_access_key_id'] = undefined;

/**
 * @member {String} upload.s3.aws_default_region
 */
SettingsData.prototype['upload.s3.aws_default_region'] = undefined;

/**
 * @member {String} upload.s3.bucket
 */
SettingsData.prototype['upload.s3.bucket'] = undefined;

/**
 * @member {String} upload.s3.bucket_domain
 */
SettingsData.prototype['upload.s3.bucket_domain'] = undefined;

/**
 * @member {String} upload.s3.bucket_path
 */
SettingsData.prototype['upload.s3.bucket_path'] = undefined;

/**
 * @member {String} upload.s3.bucket_type
 */
SettingsData.prototype['upload.s3.bucket_type'] = undefined;

/**
 * @member {String} upload.s3.expiry
 */
SettingsData.prototype['upload.s3.expiry'] = undefined;

/**
 * @member {Array.<module:model/SMTPSettings>} smtp
 */
SettingsData.prototype['smtp'] = undefined;

/**
 * @member {Array.<Object>} messengers
 */
SettingsData.prototype['messengers'] = undefined;

/**
 * @member {Boolean} bounce.enabled
 */
SettingsData.prototype['bounce.enabled'] = undefined;

/**
 * @member {Boolean} bounce.webhooks_enabled
 */
SettingsData.prototype['bounce.webhooks_enabled'] = undefined;

/**
 * @member {Number} bounce.count
 */
SettingsData.prototype['bounce.count'] = undefined;

/**
 * @member {String} bounce.action
 */
SettingsData.prototype['bounce.action'] = undefined;

/**
 * @member {Boolean} bounce.ses_enabled
 */
SettingsData.prototype['bounce.ses_enabled'] = undefined;

/**
 * @member {Boolean} bounce.sendgrid_enabled
 */
SettingsData.prototype['bounce.sendgrid_enabled'] = undefined;

/**
 * @member {String} bounce.sendgrid_key
 */
SettingsData.prototype['bounce.sendgrid_key'] = undefined;

/**
 * @member {Array.<module:model/MailBoxBounces>} bounce.mailboxes
 */
SettingsData.prototype['bounce.mailboxes'] = undefined;

/**
 * @member {String} appearance.admin.custom_css
 */
SettingsData.prototype['appearance.admin.custom_css'] = undefined;

/**
 * @member {String} appearance.admin.custom_js
 */
SettingsData.prototype['appearance.admin.custom_js'] = undefined;

/**
 * @member {String} appearance.public.custom_css
 */
SettingsData.prototype['appearance.public.custom_css'] = undefined;

/**
 * @member {String} appearance.public.custom_js
 */
SettingsData.prototype['appearance.public.custom_js'] = undefined;






export default SettingsData;

