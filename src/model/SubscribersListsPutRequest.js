/**
 * Listmonk
 * The API collection for listmonk
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscribersListsPutRequest model module.
 * @module model/SubscribersListsPutRequest
 * @version 1.0.0
 */
class SubscribersListsPutRequest {
    /**
     * Constructs a new <code>SubscribersListsPutRequest</code>.
     * @alias module:model/SubscribersListsPutRequest
     */
    constructor() { 
        
        SubscribersListsPutRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscribersListsPutRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscribersListsPutRequest} obj Optional instance to populate.
     * @return {module:model/SubscribersListsPutRequest} The populated <code>SubscribersListsPutRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscribersListsPutRequest();

            if (data.hasOwnProperty('ids')) {
                obj['ids'] = ApiClient.convertToType(data['ids'], 'Number');
            }
            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('target_list_ids')) {
                obj['target_list_ids'] = ApiClient.convertToType(data['target_list_ids'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscribersListsPutRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscribersListsPutRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The ids of the subscribers to be modified.
 * @member {Number} ids
 */
SubscribersListsPutRequest.prototype['ids'] = undefined;

/**
 * Whether to add, remove, or unsubscribe the users.
 * @member {module:model/SubscribersListsPutRequest.ActionEnum} action
 */
SubscribersListsPutRequest.prototype['action'] = undefined;

/**
 * The ids of the lists to be modified.
 * @member {Number} target_list_ids
 */
SubscribersListsPutRequest.prototype['target_list_ids'] = undefined;

/**
 * confirmed, unconfirmed, or unsubscribed status.
 * @member {module:model/SubscribersListsPutRequest.StatusEnum} status
 */
SubscribersListsPutRequest.prototype['status'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
SubscribersListsPutRequest['ActionEnum'] = {

    /**
     * value: "add"
     * @const
     */
    "add": "add",

    /**
     * value: "remove"
     * @const
     */
    "remove": "remove",

    /**
     * value: "unsubscribe"
     * @const
     */
    "unsubscribe": "unsubscribe"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
SubscribersListsPutRequest['StatusEnum'] = {

    /**
     * value: "confirmed"
     * @const
     */
    "confirmed": "confirmed",

    /**
     * value: "unconfirmed"
     * @const
     */
    "unconfirmed": "unconfirmed",

    /**
     * value: "unsubscribed"
     * @const
     */
    "unsubscribed": "unsubscribed"
};



export default SubscribersListsPutRequest;

